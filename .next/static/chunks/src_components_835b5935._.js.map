{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/teaching-plan-advisor.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardFooter,\n} from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { generateAdviceAction } from \"@/app/actions\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, BookCopy, Upload, CheckCircle2, SkipForward, RefreshCw, AlertTriangle, BookMarked } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport type { GenerateAdviceOutput } from \"@/ai/schemas\";\nimport { GlowCard } from \"./ui/spotlight-card\";\n\n// Form Schemas\nconst textFormSchema = z.object({\n  subject: z.string().min(2, { message: \"Subject must be at least 2 characters.\" }),\n  text: z.string().min(100, { message: \"Please paste at least 100 characters of content.\" }),\n});\n\nconst fileFormSchema = z.object({\n  subject: z.string().min(2, { message: \"Subject must be at least 2 characters.\" }),\n  file: z\n    .any()\n    .refine((files) => files?.length === 1, \"File is required.\")\n    .refine((files) => files?.[0]?.size <= 5000000, `Max file size is 5MB.`)\n    .refine(\n      (files) => [\"application/pdf\", \"text/plain\"].includes(files?.[0]?.type),\n      \".pdf and .txt files are accepted.\"\n    ),\n});\n\n// Main Component\nexport function TeachingPlanAdvisor() {\n  const [adviceResult, setAdviceResult] = useState<GenerateAdviceOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const textForm = useForm<z.infer<typeof textFormSchema>>({\n    resolver: zodResolver(textFormSchema),\n    defaultValues: { subject: \"\", text: \"\" },\n  });\n\n  const fileForm = useForm<z.infer<typeof fileFormSchema>>({\n    resolver: zodResolver(fileFormSchema),\n    defaultValues: { subject: \"\", file: undefined },\n  });\n  const fileRef = fileForm.register(\"file\");\n\n  async function onTextSubmit(values: z.infer<typeof textFormSchema>) {\n    setIsLoading(true);\n    setAdviceResult(null);\n\n    try {\n      const result = await generateAdviceAction({ text: values.text, subject: values.subject });\n      if (result.error) {\n        throw new Error(result.error);\n      }\n      setAdviceResult(result.advice || null);\n    } catch (error) {\n      handleError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  async function onFileSubmit(values: z.infer<typeof fileFormSchema>) {\n    setIsLoading(true);\n    setAdviceResult(null);\n\n    const file = values.file[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = async () => {\n      const fileDataUri = reader.result as string;\n\n      try {\n        const result = await generateAdviceAction({ fileDataUri, subject: values.subject });\n        if (result.error) {\n          throw new Error(result.error);\n        }\n        setAdviceResult(result.advice || null);\n      } catch (error) {\n        handleError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    reader.onerror = (error) => {\n      toast({\n        variant: \"destructive\",\n        title: \"Error Reading File\",\n        description: \"There was a problem reading your file.\",\n      });\n      setIsLoading(false);\n    };\n  }\n  \n  function handleError(error: unknown) {\n      const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\n      toast({\n        variant: \"destructive\",\n        title: \"Error Generating Advice\",\n        description: errorMessage,\n      });\n  }\n\n  return (\n    <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n      <Card className=\"w-full shadow-lg\">\n        <Tabs defaultValue=\"paste\" className=\"w-full\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                <BookMarked className=\"h-6 w-6\" /> Teaching Plan Advisor\n            </CardTitle>\n            <CardDescription>\n                Paste your syllabus or upload a file to get AI-powered teaching advice.\n            </CardDescription>\n            <TabsList className=\"grid w-full grid-cols-2 mt-4\">\n              <TabsTrigger value=\"paste\"><BookCopy className=\"mr-2 h-4 w-4\" />Paste Content</TabsTrigger>\n              <TabsTrigger value=\"upload\"><Upload className=\"mr-2 h-4 w-4\" />Upload File</TabsTrigger>\n            </TabsList>\n          </CardHeader>\n\n          <TabsContent value=\"paste\" className=\"p-0\">\n            <Form {...textForm}>\n              <form onSubmit={textForm.handleSubmit(onTextSubmit)}>\n                <CardContent className=\"px-6 pb-6 space-y-4\">\n                  <FormField\n                    control={textForm.control}\n                    name=\"subject\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Subject</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Advanced Algorithms\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={textForm.control}\n                    name=\"text\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Syllabus or Lecture Notes</FormLabel>\n                        <FormControl>\n                          <Textarea\n                            placeholder=\"Paste your course content here...\"\n                            className=\"min-h-[200px]\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </CardContent>\n                <CardFooter className=\"px-6 pb-6\">\n                  <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                    {isLoading ? (\n                      <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Analyzing...</>\n                    ) : (\"Get Advice\")}\n                  </Button>\n                </CardFooter>\n              </form>\n            </Form>\n          </TabsContent>\n          \n          <TabsContent value=\"upload\" className=\"p-0\">\n            <Form {...fileForm}>\n              <form onSubmit={fileForm.handleSubmit(onFileSubmit)}>\n                <CardContent className=\"px-6 pb-6 space-y-4\">\n                  <FormField\n                      control={fileForm.control}\n                      name=\"subject\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Subject</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"e.g., Introduction to AI\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  <FormField\n                    control={fileForm.control}\n                    name=\"file\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Upload Syllabus (PDF or TXT)</FormLabel>\n                        <FormControl>\n                          <Input\n                            type=\"file\"\n                            accept=\".pdf,.txt\"\n                            {...fileRef}\n                            className=\"file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </CardContent>\n                <CardFooter className=\"px-6 pb-6\">\n                  <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                    {isLoading ? (\n                      <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Analyzing...</>\n                    ) : (\"Get Advice from File\")}\n                  </Button>\n                </CardFooter>\n              </form>\n            </Form>\n          </TabsContent>\n        </Tabs>\n      </Card>\n\n      {isLoading && <AdviceSkeleton />}\n      {adviceResult && <AdviceDisplay advice={adviceResult} />}\n    </div>\n  );\n}\n\nfunction AdviceSkeleton() {\n  return (\n    <Card className=\"w-full shadow-lg mt-8\">\n      <CardHeader>\n        <Skeleton className=\"h-8 w-1/2\" />\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {[...Array(4)].map((_, i) => (\n          <div key={i} className=\"space-y-3\">\n            <Skeleton className=\"h-6 w-1/3\" />\n            <Skeleton className=\"h-4 w-full\" />\n            <Skeleton className=\"h-4 w-4/5\" />\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction AdviceDisplay({ advice }: { advice: GenerateAdviceOutput }) {\n  const renderList = (items: string[], emptyText: string) => {\n    if (!items || items.length === 0) {\n      return <p className=\"text-muted-foreground text-sm\">{emptyText}</p>;\n    }\n    return (\n      <ul className=\"list-disc list-inside space-y-1 text-card-foreground\">\n        {items.map((item, index) => <li key={index}>{item}</li>)}\n      </ul>\n    );\n  };\n  \n  return (\n    <Card className=\"w-full shadow-lg mt-8 bg-transparent border-none\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-headline\">AI Teaching Advice</CardTitle>\n      </CardHeader>\n      <CardContent className=\"grid md:grid-cols-2 gap-6\">\n        <GlowCard customSize className=\"p-4\" glowColor=\"green\">\n            <h3 className=\"text-lg font-semibold flex items-center gap-2 mb-2\"><CheckCircle2 className=\"h-5 w-5 text-green-400\" /> Covered Topics</h3>\n            {renderList(advice.coveredTopics, \"No specific topics were identified.\")}\n        </GlowCard>\n         <GlowCard customSize className=\"p-4\" glowColor=\"blue\">\n            <h3 className=\"text-lg font-semibold flex items-center gap-2 mb-2\"><SkipForward className=\"h-5 w-5 text-blue-400\" /> Next Topic to Teach</h3>\n            <p className=\"text-card-foreground\">{advice.nextTopic || \"Could not determine the next logical topic.\"}</p>\n        </GlowCard>\n         <GlowCard customSize className=\"p-4\" glowColor=\"orange\">\n            <h3 className=\"text-lg font-semibold flex items-center gap-2 mb-2\"><RefreshCw className=\"h-5 w-5 text-orange-400\" /> Suggested Revisions</h3>\n            {renderList(advice.suggestedRevisions, \"No specific revision suggestions.\")}\n        </GlowCard>\n        <GlowCard customSize className=\"p-4\" glowColor=\"red\">\n            <h3 className=\"text-lg font-semibold flex items-center gap-2 mb-2\"><AlertTriangle className=\"h-5 w-5 text-red-400\" /> Missed or Skipped Concepts</h3>\n            {renderList(advice.skippedConcepts, \"No missed or skipped concepts were identified.\")}\n        </GlowCard>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 827, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/performance-dashboard.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { getPerformanceReports } from '@/app/actions';\nimport type { PerformanceReport } from '@/ai/schemas';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger, DialogDescription } from '@/components/ui/dialog';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { AlertTriangle, CheckCircle2, Lightbulb, CalendarDays, BookOpen, User, Eye, Target } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport type { GenerateFeedbackOutput } from \"@/ai/schemas\";\n\ntype ParsedFeedback = {\n    strengths: string[];\n    weaknesses: string[];\n    improvementTips: string;\n};\n\ntype ParsedStudyPlan = GenerateFeedbackOutput['studyPlan'];\n\nfunction ReportDetails({ report }: { report: PerformanceReport }) {\n    let parsedFeedback: ParsedFeedback | null = null;\n    let parsedStudyPlan: ParsedStudyPlan | null = null;\n\n    try {\n        if (report.feedback) {\n            parsedFeedback = typeof report.feedback === 'string' \n                ? JSON.parse(report.feedback) \n                : report.feedback;\n        }\n        if (report.improvement_plan) {\n            parsedStudyPlan = typeof report.improvement_plan === 'string'\n                ? JSON.parse(report.improvement_plan)\n                : report.improvement_plan;\n        }\n    } catch (e) {\n        console.error(\"Error parsing report data:\", e);\n        return (\n            <div className=\"flex flex-col items-center justify-center p-8 text-center\">\n                <AlertTriangle className=\"h-10 w-10 text-destructive mb-4\" />\n                <h3 className=\"text-lg font-semibold\">Error Parsing Report</h3>\n                <p className=\"text-sm text-muted-foreground\">The data for this report seems to be corrupted.</p>\n            </div>\n        )\n    }\n\n    const plan = parsedStudyPlan ? Object.entries(parsedStudyPlan) : [];\n\n    const strengthsContent = parsedFeedback?.strengths && parsedFeedback.strengths.length > 0\n        ? <ul className=\"list-disc list-inside space-y-1\">{parsedFeedback.strengths.map(s => <li key={s}>{s}</li>)}</ul>\n        : <p className=\"text-muted-foreground text-sm\">No specific strengths identified (scores &gt; 85).</p>;\n\n    const weaknessesContent = parsedFeedback?.weaknesses && parsedFeedback.weaknesses.length > 0\n        ? <ul className=\"list-disc list-inside space-y-1\">{parsedFeedback.weaknesses.map(w => <li key={w}>{w}</li>)}</ul>\n        : <p className=\"text-muted-foreground text-sm\">No specific weaknesses identified (scores &lt; 75).</p>;\n\n    return (\n        <div className=\"space-y-6 pt-4 text-left\">\n             <div className=\"grid md:grid-cols-2 gap-6\">\n                <Card className=\"bg-secondary/30\">\n                  <CardHeader>\n                    <CardTitle className=\"text-lg flex items-center gap-2\">\n                        <CheckCircle2 className=\"h-5 w-5 text-green-600\" /> Strengths\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {strengthsContent}\n                  </CardContent>\n                </Card>\n\n                <Card className=\"bg-destructive/10\">\n                   <CardHeader>\n                    <CardTitle className=\"text-lg flex items-center gap-2\">\n                        <AlertTriangle className=\"h-5 w-5 text-red-600\" /> Areas for Improvement\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {weaknessesContent}\n                  </CardContent>\n                </Card>\n            </div>\n            \n            {parsedFeedback?.improvementTips && (\n                <div>\n                    <h3 className=\"text-xl font-semibold flex items-center gap-2 mb-3\">\n                        <Lightbulb className=\"h-5 w-5\" /> Actionable Improvement Tips\n                    </h3>\n                    <p className=\"text-muted-foreground bg-accent/40 p-4 rounded-lg\">{parsedFeedback.improvementTips}</p>\n                </div>\n            )}\n            \n            {plan.length > 0 && (\n                <div>\n                     <h3 className=\"text-xl font-semibold flex items-center gap-2 mb-3\">\n                        <CalendarDays className=\"h-5 w-5\" /> 7-Day Personalized Plan\n                    </h3>\n                    <div className=\"border rounded-lg\">\n                        <Table>\n                            <TableHeader>\n                                <TableRow>\n                                    <TableHead className=\"w-[100px]\">Day</TableHead>\n                                    <TableHead>Focus Topic</TableHead>\n                                    <TableHead>Suggested Task</TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {plan.map(([day, details], index) => (\n                                    <TableRow key={day}>\n                                        <TableCell className=\"font-medium\">Day {index + 1}</TableCell>\n                                        <TableCell>{(details as any).topic}</TableCell>\n                                        <TableCell>{(details as any).task}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport function PerformanceDashboard() {\n  const [reports, setReports] = useState<PerformanceReport[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function loadReports() {\n      setIsLoading(true);\n      setError(null);\n      const result = await getPerformanceReports();\n      if (result.error) {\n        setError(result.error);\n      } else {\n        setReports(result.reports || []);\n      }\n      setIsLoading(false);\n    }\n    loadReports();\n  }, []);\n\n  if (isLoading) {\n    return (\n        <Card>\n            <CardHeader>\n                <Skeleton className=\"h-8 w-1/2\" />\n                <Skeleton className=\"h-4 w-3/4\" />\n            </CardHeader>\n            <CardContent>\n                <div className=\"space-y-4\">\n                    {[...Array(3)].map((_, i) => (\n                        <div key={i} className=\"flex items-center space-x-4\">\n                            <Skeleton className=\"h-12 w-full\" />\n                        </div>\n                    ))}\n                </div>\n            </CardContent>\n        </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card>\n        <CardHeader>\n            <CardTitle className=\"text-destructive\">Error</CardTitle>\n        </CardHeader>\n        <CardContent>\n            <Alert variant=\"destructive\">\n                <AlertTriangle className=\"h-4 w-4\" />\n                <AlertTitle>Could Not Load Reports</AlertTitle>\n                <AlertDescription>{error}</AlertDescription>\n            </Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n    <Card className=\"w-full shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n            <BookOpen className=\"h-6 w-6\" /> Performance Reports\n        </CardTitle>\n        <CardDescription>\n            View and manage all AI-generated student performance reports.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        {reports.length > 0 ? (\n            <div className=\"border rounded-lg\">\n                <Table>\n                    <TableHeader>\n                        <TableRow>\n                            <TableHead><User className=\"inline-block mr-1 h-4 w-4\" />Student Name</TableHead>\n                            <TableHead><BookOpen className=\"inline-block mr-1 h-4 w-4\" />Subject(s)</TableHead>\n                            <TableHead><Target className=\"inline-block mr-1 h-4 w-4\" />Score</TableHead>\n                            <TableHead><CalendarDays className=\"inline-block mr-1 h-4 w-4\" />Date Generated</TableHead>\n                            <TableHead className=\"text-right\">Actions</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {reports.map((report) => (\n                            <TableRow key={report.id}>\n                                <TableCell className=\"font-medium\">{report.student_name}</TableCell>\n                                <TableCell className=\"max-w-[200px] truncate\">{report.subject}</TableCell>\n                                <TableCell>{report.score}/{report.total}</TableCell>\n                                <TableCell>{format(new Date(report.created_at), 'MMMM d, yyyy')}</TableCell>\n                                <TableCell className=\"text-right\">\n                                    <Dialog>\n                                        <DialogTrigger asChild>\n                                            <Button variant=\"outline\" size=\"sm\">\n                                                <Eye className=\"mr-2 h-4 w-4\" /> View Details\n                                            </Button>\n                                        </DialogTrigger>\n                                        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n                                            <DialogHeader>\n                                                <DialogTitle className=\"text-2xl\">Feedback Report for {report.student_name}</DialogTitle>\n                                                <DialogDescription>\n                                                    Generated on {format(new Date(report.created_at), 'PPP')}\n                                                </DialogDescription>\n                                            </DialogHeader>\n                                            <ReportDetails report={report} />\n                                        </DialogContent>\n                                    </Dialog>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n        ) : (\n            <div className=\"text-center py-10 border-2 border-dashed rounded-lg\">\n                <h3 className=\"text-lg font-semibold text-muted-foreground\">No Reports Found</h3>\n                <p className=\"text-sm text-muted-foreground mt-1\">Generate feedback in the Grade Analyzer tab to see reports here.</p>\n            </div>\n        )}\n      </CardContent>\n    </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1668, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/question-paper-generator.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport jsPDF from \"jspdf\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, FileDown, FileText, Upload } from \"lucide-react\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { generateQuestionPaperAction } from \"@/app/actions\";\nimport type { GenerateQuestionPaperOutput } from \"@/ai/schemas\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nconst topicFormSchema = z.object({\n  subject: z.string().min(2, { message: \"Subject must be at least 2 characters.\" }),\n  unit: z.string().min(2, { message: \"Unit/Topic must be at least 2 characters.\" }),\n});\n\nconst fileFormSchema = z.object({\n  subject: z.string().min(2, { message: \"Subject must be at least 2 characters.\" }),\n  file: z\n    .any()\n    .refine((files) => files?.length === 1, \"File is required.\")\n    .refine((files) => files?.[0]?.size <= 5000000, `Max file size is 5MB.`)\n    .refine(\n      (files) => [\"application/pdf\", \"text/plain\"].includes(files?.[0]?.type),\n      \".pdf and .txt files are accepted.\"\n    ),\n});\n\nexport function QuestionPaperGenerator() {\n  const [generatedPaper, setGeneratedPaper] = useState<GenerateQuestionPaperOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [formState, setFormState] = useState({ subject: \"\", unit: \"\" });\n  const { toast } = useToast();\n\n  const topicForm = useForm<z.infer<typeof topicFormSchema>>({\n    resolver: zodResolver(topicFormSchema),\n    defaultValues: { subject: \"\", unit: \"\" },\n  });\n\n  const fileForm = useForm<z.infer<typeof fileFormSchema>>({\n    resolver: zodResolver(fileFormSchema),\n    defaultValues: { subject: \"\", file: undefined },\n  });\n  const fileRef = fileForm.register(\"file\");\n\n  const handleGeneration = async (values: { subject: string; unit?: string; fileDataUri?: string }) => {\n    setIsLoading(true);\n    setGeneratedPaper(null);\n    setFormState({ subject: values.subject, unit: values.unit || `From File` });\n\n    try {\n      const result = await generateQuestionPaperAction(values);\n      if (result.error) throw new Error(result.error);\n      \n      setGeneratedPaper(result.paper || null);\n      if (!result.paper || result.paper.oneMarkQuestions.length === 0) {\n        toast({\n            title: \"No Content Generated\",\n            description: \"The AI couldn't generate a question paper for the given criteria. Try different options.\",\n        });\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\n      toast({\n        variant: \"destructive\",\n        title: \"Error Generating Paper\",\n        description: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  async function onTopicSubmit(values: z.infer<typeof topicFormSchema>) {\n    await handleGeneration(values);\n  }\n\n  async function onFileSubmit(values: z.infer<typeof fileFormSchema>) {\n    const file = values.file[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = async () => {\n        const fileDataUri = reader.result as string;\n        await handleGeneration({ subject: values.subject, fileDataUri });\n    };\n    reader.onerror = () => {\n        toast({ variant: \"destructive\", title: \"File Error\", description: \"Failed to read the uploaded file.\" });\n    };\n  }\n\n  return (\n    <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n      <Card className=\"w-full shadow-lg\">\n        <Tabs defaultValue=\"topic\" className=\"w-full\">\n            <CardHeader>\n              <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                <FileText className=\"h-6 w-6\" /> Question Paper Generator\n              </CardTitle>\n              <CardDescription>\n                Generate a balanced question paper for engineering exams from a topic or a document.\n              </CardDescription>\n              <TabsList className=\"grid w-full grid-cols-2 mt-4\">\n                <TabsTrigger value=\"topic\"><FileText className=\"mr-2 h-4 w-4\"/>From Topic</TabsTrigger>\n                <TabsTrigger value=\"file\"><Upload className=\"mr-2 h-4 w-4\"/>From File</TabsTrigger>\n              </TabsList>\n            </CardHeader>\n            <TabsContent value=\"topic\" className=\"p-0\">\n                <Form {...topicForm}>\n                <form onSubmit={topicForm.handleSubmit(onTopicSubmit)}>\n                    <CardContent className=\"space-y-4 px-6 pb-6\">\n                    <FormField\n                        control={topicForm.control}\n                        name=\"subject\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Subject</FormLabel>\n                            <FormControl>\n                            <Input placeholder=\"e.g., Computer Networks\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                    <FormField\n                        control={topicForm.control}\n                        name=\"unit\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Unit / Topic</FormLabel>\n                            <FormControl>\n                            <Input placeholder=\"e.g., Unit 3: Transport Layer\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                    </CardContent>\n                    <CardFooter className=\"px-6 pb-6\">\n                    <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                        {isLoading ? (\n                        <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Generating...</>\n                        ) : ( \"Generate from Topic\" )}\n                    </Button>\n                    </CardFooter>\n                </form>\n                </Form>\n            </TabsContent>\n            <TabsContent value=\"file\" className=\"p-0\">\n                <Form {...fileForm}>\n                <form onSubmit={fileForm.handleSubmit(onFileSubmit)}>\n                    <CardContent className=\"space-y-4 px-6 pb-6\">\n                    <FormField\n                        control={fileForm.control}\n                        name=\"subject\"\n                        render={({ field }) => (\n                        <FormItem>\n                            <FormLabel>Subject</FormLabel>\n                            <FormControl>\n                            <Input placeholder=\"e.g., Advanced Algorithms\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                    <FormField\n                        control={fileForm.control}\n                        name=\"file\"\n                        render={() => (\n                        <FormItem>\n                            <FormLabel>Syllabus or Notes (PDF/TXT)</FormLabel>\n                            <FormControl>\n                            <Input\n                                type=\"file\"\n                                accept=\".pdf,.txt\"\n                                {...fileRef}\n                                className=\"file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n                             />\n                            </FormControl>\n                            <FormMessage />\n                        </FormItem>\n                        )}\n                    />\n                    </CardContent>\n                    <CardFooter className=\"px-6 pb-6\">\n                    <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                        {isLoading ? (\n                        <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Generating...</>\n                        ) : ( \"Generate from File\" )}\n                    </Button>\n                    </CardFooter>\n                </form>\n                </Form>\n            </TabsContent>\n        </Tabs>\n      </Card>\n      \n      {isLoading && <PaperSkeleton />}\n      {generatedPaper && <PaperDisplay paper={generatedPaper} subject={formState.subject} unit={formState.unit} />}\n    </div>\n  );\n}\n\nfunction PaperDisplay({ paper, subject, unit }: { paper: GenerateQuestionPaperOutput; subject: string; unit: string }) {\n  const handleDownloadPdf = () => {\n    const doc = new jsPDF();\n    const pageHeight = doc.internal.pageSize.height || doc.internal.pageSize.getHeight();\n    const pageWidth = doc.internal.pageSize.width || doc.internal.pageSize.getWidth();\n    let y = 20;\n\n    const checkPageBreak = (spaceNeeded: number) => {\n        if (y + spaceNeeded > pageHeight - 20) {\n            doc.addPage();\n            y = 20;\n        }\n    };\n\n    // Title\n    doc.setFontSize(18);\n    doc.setFont('helvetica', 'bold');\n    doc.text(subject, pageWidth / 2, y, { align: 'center' });\n    y += 8;\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'normal');\n    doc.text(unit, pageWidth / 2, y, { align: 'center' });\n    y += 15;\n\n    // --- 1-Mark Questions ---\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Part A: 1-Mark Questions (10 x 1 = 10 Marks)', 15, y);\n    y += 8;\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'normal');\n\n    paper.oneMarkQuestions.forEach((mcq, index) => {\n        const questionText = `${index + 1}. ${mcq.question}`;\n        const splitQuestion = doc.splitTextToSize(questionText, pageWidth - 30);\n        checkPageBreak(splitQuestion.length * 5 + 25);\n        doc.text(splitQuestion, 15, y);\n        y += splitQuestion.length * 5 + 2;\n\n        const options = [`a) ${mcq.options.a}`, `b) ${mcq.options.b}`, `c) ${mcq.options.c}`, `d) ${mcq.options.d}`];\n        options.forEach(opt => {\n            const splitOption = doc.splitTextToSize(opt, pageWidth - 40);\n            doc.text(splitOption, 20, y);\n            y += splitOption.length * 5;\n        });\n        y += 4;\n    });\n\n    // --- 2-Mark Questions ---\n    checkPageBreak(20);\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Part B: 2-Mark Questions (10 x 2 = 20 Marks)', 15, y);\n    y += 8;\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'normal');\n\n    paper.twoMarkQuestions.forEach((q, index) => {\n        const questionText = `${index + 1}. ${q}`;\n        const splitQuestion = doc.splitTextToSize(questionText, pageWidth - 30);\n        checkPageBreak(splitQuestion.length * 5 + 4);\n        doc.text(splitQuestion, 15, y);\n        y += splitQuestion.length * 5 + 4;\n    });\n\n    // --- 10-Mark Questions ---\n    checkPageBreak(20);\n    doc.setFontSize(14);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Part C: 10-Mark Questions (Answer any TWO) (2 x 10 = 20 Marks)', 15, y);\n    y += 8;\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'normal');\n\n    paper.tenMarkQuestions.forEach((q, index) => {\n        const questionText = `${index + 1}. ${q}`;\n        const splitQuestion = doc.splitTextToSize(questionText, pageWidth - 30);\n        checkPageBreak(splitQuestion.length * 5 + 6);\n        doc.text(splitQuestion, 15, y);\n        y += splitQuestion.length * 5 + 6;\n    });\n\n    // --- Answer Key ---\n    doc.addPage();\n    y = 20;\n    doc.setFontSize(16);\n    doc.setFont('helvetica', 'bold');\n    doc.text('Answer Key for Part A', 15, y);\n    y += 10;\n    doc.setFontSize(11);\n    doc.setFont('helvetica', 'normal');\n    paper.oneMarkQuestions.forEach((mcq, index) => {\n        const answerText = `${index + 1}. ${mcq.answer}`;\n        const splitAnswer = doc.splitTextToSize(answerText, pageWidth-30)\n        checkPageBreak(splitAnswer.length * 7);\n        doc.text(splitAnswer, 15, y);\n        y += splitAnswer.length * 7;\n    });\n\n    doc.save(`question_paper_${subject.replace(/[^a-zA-Z0-9]/g, '_')}.pdf`);\n  };\n\n  return (\n    <Card className=\"w-full shadow-lg mt-8\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-headline\">Generated Question Paper</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-8\">\n        <div>\n          <h3 className=\"text-xl font-bold mb-4\">📘 1-Mark Questions (Choose the correct option)</h3>\n          <div className=\"space-y-6\">\n            {paper.oneMarkQuestions.map((mcq, index) => (\n              <div key={index}>\n                <p className=\"font-medium\">{index + 1}. {mcq.question}</p>\n                <div className=\"pl-4 mt-2 space-y-1 text-muted-foreground\">\n                  <p>a) {mcq.options.a}</p>\n                  <p>b) {mcq.options.b}</p>\n                  <p>c) {mcq.options.c}</p>\n                  <p>d) {mcq.options.d}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <Separator />\n\n        <div>\n          <h3 className=\"text-xl font-bold mb-4\">✍️ 2-Mark Questions</h3>\n          <ol className=\"list-decimal list-inside space-y-3\">\n            {paper.twoMarkQuestions.map((q, index) => (\n              <li key={index}>{q}</li>\n            ))}\n          </ol>\n        </div>\n\n        <Separator />\n\n        <div>\n          <h3 className=\"text-xl font-bold mb-4\">📝 10-Mark Questions (Answer any TWO)</h3>\n          <ol className=\"list-decimal list-inside space-y-4\">\n            {paper.tenMarkQuestions.map((q, index) => (\n              <li key={index}>{q}</li>\n            ))}\n          </ol>\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex justify-end pt-6\">\n          <Button onClick={handleDownloadPdf} variant=\"outline\">\n              <FileDown className=\"mr-2 h-4 w-4\" />\n              Download as PDF\n          </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n\nfunction PaperSkeleton() {\n    return (\n        <Card className=\"mt-8\">\n            <CardHeader><CardTitle>Generating Paper...</CardTitle></CardHeader>\n            <CardContent className=\"space-y-6 p-6\">\n                {[...Array(3)].map((_, i) => (\n                  <div key={i} className=\"space-y-3\">\n                    <Skeleton className=\"h-6 w-1/3\" />\n                    <Skeleton className=\"h-4 w-full\" />\n                    <Skeleton className=\"h-4 w-4/5\" />\n                    <Skeleton className=\"h-4 w-full\" />\n                    <Skeleton className=\"h-4 w-3/4\" />\n                  </div>\n                ))}\n            </CardContent>\n        </Card>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2630, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/manual-attendance-form.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { format } from \"date-fns\";\nimport { SaveAttendanceInputSchema, type SaveAttendanceInput } from \"@/ai/schemas\";\nimport { saveAttendanceAction } from \"@/app/actions\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2 } from \"lucide-react\";\n\ntype ManualAttendanceFormProps = {\n  onSuccess: () => void;\n};\n\nexport function ManualAttendanceForm({ onSuccess }: ManualAttendanceFormProps) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<SaveAttendanceInput>({\n    resolver: zodResolver(SaveAttendanceInputSchema),\n    defaultValues: {\n      student_name: \"\",\n      roll_no: \"\",\n      date: format(new Date(), 'yyyy-MM-dd'),\n      subject: \"\",\n      period: \"\",\n      status: \"Present\",\n      remark: \"\",\n      behavior_tags: \"\",\n    },\n  });\n\n  async function onSubmit(values: SaveAttendanceInput) {\n    setIsSubmitting(true);\n    try {\n      const result = await saveAttendanceAction(values);\n      if (result.error) {\n        throw new Error(result.error);\n      }\n      toast({\n        title: \"Success\",\n        description: result.message,\n      });\n      const currentValues = form.getValues();\n      form.reset({\n        ...currentValues,\n        student_name: \"\",\n        roll_no: \"\",\n        remark: \"\",\n        behavior_tags: \"\",\n        status: \"Present\",\n      });\n      onSuccess(); // Trigger data refresh in parent\n    } catch (e) {\n      const errorMessage = e instanceof Error ? e.message : \"An unknown error occurred.\";\n      toast({\n        variant: \"destructive\",\n        title: \"Submission Failed\",\n        description: errorMessage,\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"grid md:grid-cols-2 gap-6\">\n          <FormField control={form.control} name=\"student_name\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>🧑 Student Name</FormLabel>\n              <FormControl><Input placeholder=\"e.g. John Doe\" {...field} /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n          <FormField control={form.control} name=\"roll_no\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>🆔 Roll Number</FormLabel>\n              <FormControl><Input placeholder=\"e.g. CSE001\" {...field} /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n        </div>\n        <div className=\"grid md:grid-cols-3 gap-6\">\n          <FormField control={form.control} name=\"date\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>📅 Date</FormLabel>\n              <FormControl><Input type=\"date\" {...field} /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n          <FormField control={form.control} name=\"subject\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>📚 Subject</FormLabel>\n              <FormControl><Input placeholder=\"e.g. Data Structures\" {...field} /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n          <FormField control={form.control} name=\"period\" render={({ field }) => (\n            <FormItem>\n              <FormLabel>⏱️ Period</FormLabel>\n              <FormControl><Input placeholder=\"e.g. 1st\" {...field} /></FormControl>\n              <FormMessage />\n            </FormItem>\n          )} />\n        </div>\n        \n        <FormField\n          control={form.control}\n          name=\"status\"\n          render={({ field }) => (\n            <FormItem className=\"space-y-3\">\n              <FormLabel>🔘 Status</FormLabel>\n              <FormControl>\n                <RadioGroup\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                  className=\"flex flex-col space-y-1 md:flex-row md:space-y-0 md:items-center md:gap-x-6\"\n                >\n                  <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"Present\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">Present</FormLabel>\n                  </FormItem>\n                  <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"Absent\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">Absent</FormLabel>\n                  </FormItem>\n                  <FormItem className=\"flex items-center space-x-2 space-y-0\">\n                    <FormControl>\n                      <RadioGroupItem value=\"Late\" />\n                    </FormControl>\n                    <FormLabel className=\"font-normal\">Late</FormLabel>\n                  </FormItem>\n                </RadioGroup>\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField control={form.control} name=\"remark\" render={({ field }) => (\n          <FormItem>\n            <FormLabel>💬 Remark (Optional)</FormLabel>\n            <FormControl><Textarea placeholder=\"Any specific comments...\" {...field} /></FormControl>\n            <FormMessage />\n          </FormItem>\n        )} />\n\n        <FormField control={form.control} name=\"behavior_tags\" render={({ field }) => (\n          <FormItem>\n            <FormLabel>🏷️ Behavior Tags (Optional)</FormLabel>\n            <FormControl><Input placeholder=\"Distracted, Late, Participated well\" {...field} /></FormControl>\n            <p className=\"text-xs text-muted-foreground\">Enter tags separated by commas.</p>\n            <FormMessage />\n          </FormItem>\n        )} />\n\n        <Button type=\"submit\" disabled={isSubmitting} className=\"w-full\">\n          {isSubmitting ? (\n            <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Saving...</>\n          ) : \"Save Attendance\"}\n        </Button>\n      </form>\n    </Form>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3225, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/attendance-tracker.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { getAttendanceRecords, generateAttendanceReportAction } from '@/app/actions';\nimport type { AttendanceRecord } from '@/ai/schemas';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { AlertTriangle, User, ClipboardList, BadgePercent, Tags, BrainCircuit, Loader2, Edit, Presentation } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ManualAttendanceForm } from './manual-attendance-form';\n\ntype AggregatedStudentData = {\n    rollNo: string;\n    name: string;\n    totalDays: number;\n    presentDays: number;\n    behaviorTags: string[];\n};\n\nfunction AttendanceReportViewer({ records, isLoading, error }: { records: AttendanceRecord[], isLoading: boolean, error: string | null }) {\n    const [selectedRollNo, setSelectedRollNo] = useState<string | null>(null);\n    const [isReportLoading, setIsReportLoading] = useState(false);\n    const [generatedReport, setGeneratedReport] = useState<string | null>(null);\n    const { toast } = useToast();\n\n    const aggregatedData = useMemo(() => {\n        const studentMap = new Map<string, AggregatedStudentData>();\n        records.forEach(record => {\n            let student = studentMap.get(record.roll_no);\n            if (!student) {\n                student = {\n                    rollNo: record.roll_no,\n                    name: record.student_name,\n                    totalDays: 0,\n                    presentDays: 0,\n                    behaviorTags: [],\n                };\n            }\n            student.totalDays++;\n            if (record.status === 'Present' || record.status === 'Late') {\n                student.presentDays++;\n            }\n            if (record.behavior_tags) {\n                const tags = record.behavior_tags.split(',').map(t => t.trim()).filter(Boolean);\n                student.behaviorTags.push(...tags);\n            }\n            if (record.status === 'Late') {\n                student.behaviorTags.push('Late');\n            }\n            studentMap.set(record.roll_no, student);\n        });\n        return Array.from(studentMap.values()).sort((a,b) => a.name.localeCompare(b.name));\n    }, [records]);\n\n    const selectedStudentData = useMemo(() => {\n        return aggregatedData.find(s => s.rollNo === selectedRollNo) || null;\n    }, [selectedRollNo, aggregatedData]);\n\n    const handleStudentSelect = (rollNo: string) => {\n        setSelectedRollNo(rollNo);\n        setGeneratedReport(null);\n    };\n    \n    const handleGenerateReport = async () => {\n        if (!selectedStudentData) return;\n        setIsReportLoading(true);\n        setGeneratedReport(null);\n        try {\n            const result = await generateAttendanceReportAction({\n                studentName: selectedStudentData.name,\n                totalDays: selectedStudentData.totalDays,\n                presentDays: selectedStudentData.presentDays,\n                behaviorTags: [...new Set(selectedStudentData.behaviorTags)] // Pass unique tags\n            });\n\n            if (result.error) throw new Error(result.error);\n            setGeneratedReport(result.report?.report || \"Could not generate a report.\");\n        } catch (e) {\n            const errorMessage = e instanceof Error ? e.message : \"An unknown error occurred.\";\n            toast({ variant: \"destructive\", title: \"Report Generation Failed\", description: errorMessage });\n        } finally {\n            setIsReportLoading(false);\n        }\n    };\n\n    if (isLoading) {\n        return <Skeleton className=\"w-full h-64\" />;\n    }\n    if (error) {\n        return (\n            <Alert variant=\"destructive\">\n                <AlertTriangle className=\"h-4 w-4\" />\n                <AlertTitle>Error</AlertTitle>\n                <AlertDescription>{error}</AlertDescription>\n            </Alert>\n        );\n    }\n    if (aggregatedData.length === 0) {\n        return (\n             <div className=\"text-center py-10 border-2 border-dashed rounded-lg\">\n                <h3 className=\"text-lg font-semibold text-muted-foreground\">No Attendance Data</h3>\n                <p className=\"text-sm text-muted-foreground mt-1\">Use the Manual Entry tab to add records.</p>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"space-y-2\">\n                <label htmlFor=\"student-select\" className=\"font-medium text-sm flex items-center gap-2\"><User className=\"h-4 w-4\" /> Select Student</label>\n                <Select onValueChange={handleStudentSelect} value={selectedRollNo ?? ''}>\n                    <SelectTrigger id=\"student-select\" className=\"w-full md:w-1/2\">\n                        <SelectValue placeholder=\"Choose a student...\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                        {aggregatedData.map(student => (\n                            <SelectItem key={student.rollNo} value={student.rollNo}>\n                                {student.name} ({student.rollNo})\n                            </SelectItem>\n                        ))}\n                    </SelectContent>\n                </Select>\n            </div>\n\n            {selectedStudentData && (\n                <Card className=\"bg-secondary/30\">\n                    <CardContent className=\"pt-6 grid md:grid-cols-2 gap-6\">\n                        <div className=\"space-y-2\">\n                            <h3 className=\"font-semibold flex items-center gap-2 text-muted-foreground\"><BadgePercent className=\"h-5 w-5\" /> Attendance</h3>\n                            <p className=\"text-3xl font-bold\">\n                                {selectedStudentData.totalDays > 0 ? \n                                 ((selectedStudentData.presentDays / selectedStudentData.totalDays) * 100).toFixed(0) : 0}%\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\">{selectedStudentData.presentDays} / {selectedStudentData.totalDays} days present</p>\n                        </div>\n                        <div className=\"space-y-2\">\n                            <h3 className=\"font-semibold flex items-center gap-2 text-muted-foreground\"><Tags className=\"h-5 w-5\" /> Behavior Tags</h3>\n                            <div className=\"flex flex-wrap gap-2\">\n                                {selectedStudentData.behaviorTags.length > 0 ? (\n                                    [...new Set(selectedStudentData.behaviorTags)].map((tag, i) => (\n                                        <Badge key={i} variant=\"outline\">{tag}</Badge>\n                                    ))\n                                ) : (\n                                    <p className=\"text-sm text-muted-foreground\">No tags recorded.</p>\n                                )}\n                            </div>\n                        </div>\n                    </CardContent>\n                    <CardFooter className=\"flex-col items-start gap-4\">\n                        <Button onClick={handleGenerateReport} disabled={isReportLoading}>\n                            {isReportLoading ? (\n                                <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Generating Report...</>\n                            ) : (\n                                <><BrainCircuit className=\"mr-2 h-4 w-4\" />Generate AI Report</>\n                            )}\n                        </Button>\n                        {isReportLoading && <Skeleton className=\"h-10 w-full\" />}\n                        {generatedReport && (\n                            <Alert>\n                                <AlertTitle className=\"font-semibold\">AI Generated Summary</AlertTitle>\n                                <AlertDescription>{generatedReport}</AlertDescription>\n                            </Alert>\n                        )}\n                    </CardFooter>\n                </Card>\n            )}\n        </div>\n    );\n}\n\nexport function AttendanceTracker() {\n    const [records, setRecords] = useState<AttendanceRecord[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    const loadData = useCallback(async () => {\n        setIsLoading(true);\n        const result = await getAttendanceRecords();\n        if (result.error) {\n            setError(result.error);\n        } else {\n            setRecords(result.records || []);\n        }\n        setIsLoading(false);\n    }, []);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    return (\n        <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n        <Card className=\"w-full shadow-lg\">\n            <CardHeader>\n                <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                    <ClipboardList className=\"h-6 w-6\" /> Student Attendance\n                </CardTitle>\n                <CardDescription>\n                    Manually enter daily attendance or view aggregated reports for students.\n                </CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Tabs defaultValue=\"entry\" className=\"w-full\">\n                    <TabsList className=\"grid w-full grid-cols-2\">\n                        <TabsTrigger value=\"entry\">\n                            <Edit className=\"mr-2 h-4 w-4\" /> Manual Entry\n                        </TabsTrigger>\n                        <TabsTrigger value=\"report\">\n                            <Presentation className=\"mr-2 h-4 w-4\" /> View & Report\n                        </TabsTrigger>\n                    </TabsList>\n                    <TabsContent value=\"entry\" className=\"mt-6\">\n                        <ManualAttendanceForm onSuccess={loadData} />\n                    </TabsContent>\n                    <TabsContent value=\"report\" className=\"mt-6\">\n                        <AttendanceReportViewer records={records} isLoading={isLoading} error={error} />\n                    </TabsContent>\n                </Tabs>\n            </CardContent>\n        </Card>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3874, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/mark-calculator.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, Calculator, Wand2 } from \"lucide-react\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { SaveInternalMarksInputSchema, type SaveInternalMarksInput } from \"@/ai/schemas\";\nimport { saveInternalMarksAction } from \"@/app/actions\";\n\nexport function MarkCalculator() {\n  const [generatedFeedback, setGeneratedFeedback] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<SaveInternalMarksInput>({\n    resolver: zodResolver(SaveInternalMarksInputSchema),\n    defaultValues: {\n      student_name: \"\",\n      roll_no: \"\",\n      subject: \"\",\n      test1: undefined,\n      test2: undefined,\n      assignment: undefined,\n      attendance: undefined,\n    },\n  });\n\n  async function onSubmit(values: SaveInternalMarksInput) {\n    setIsLoading(true);\n    setGeneratedFeedback(null);\n\n    try {\n      const result = await saveInternalMarksAction(values);\n      if (result.error) {\n        throw new Error(result.error);\n      }\n      setGeneratedFeedback(result.feedback || \"No feedback was generated.\");\n      toast({\n        title: \"Success!\",\n        description: \"Student marks and feedback have been saved.\",\n      });\n      form.reset();\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\n      toast({\n        variant: \"destructive\",\n        title: \"Error\",\n        description: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n    <Card className=\"w-full shadow-lg\">\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n              <Calculator className=\"h-6 w-6\" /> Mark Calculator\n            </CardTitle>\n            <CardDescription>\n              Enter student marks to calculate internal score, grade, and generate AI feedback.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <FormField\n                control={form.control}\n                name=\"student_name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Student Name</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., Keerthi\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"roll_no\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Roll Number</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., ECE021\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"subject\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Subject</FormLabel>\n                    <FormControl>\n                      <Input placeholder=\"e.g., Digital Signal Processing\" {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n            <div className=\"grid md:grid-cols-4 gap-6\">\n              <FormField\n                control={form.control}\n                name=\"test1\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Test 1 (out of 10)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" min=\"0\" max=\"10\" {...field} value={field.value ?? ''} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"test2\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Test 2 (out of 10)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" min=\"0\" max=\"10\" {...field} value={field.value ?? ''} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"assignment\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Assignment (out of 10)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" min=\"0\" max=\"10\" {...field} value={field.value ?? ''} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"attendance\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Attendance (%)</FormLabel>\n                    <FormControl>\n                      <Input type=\"number\" min=\"0\" max=\"100\" {...field} value={field.value ?? ''} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n            {generatedFeedback && (\n              <Alert>\n                <Wand2 className=\"h-4 w-4\" />\n                <AlertTitle>AI Generated Feedback</AlertTitle>\n                <AlertDescription>\n                  {generatedFeedback}\n                </AlertDescription>\n              </Alert>\n            )}\n          </CardContent>\n          <CardFooter>\n            <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n              {isLoading ? (\n                <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Calculating & Saving...</>\n              ) : (\"Calculate & Generate Feedback\")}\n            </Button>\n          </CardFooter>\n        </form>\n      </Form>\n    </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4423, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/galaxy-visual.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from 'react';\nimport type { GenerateKnowledgeGalaxyOutput, Planet } from '@/ai/schemas';\nimport { Sparkles } from 'lucide-react';\n\ninterface GalaxyVisualProps {\n    galaxyData: GenerateKnowledgeGalaxyOutput;\n}\n\nconst colors = [\n    'text-purple-400',\n    'text-pink-400',\n    'text-red-400',\n    'text-yellow-400',\n    'text-green-400',\n    'text-blue-400',\n    'text-indigo-400',\n];\n\nexport function GalaxyVisual({ galaxyData }: GalaxyVisualProps) {\n    const [activePlanet, setActivePlanet] = useState<Planet | null>(null);\n\n    const handlePlanetClick = (planet: Planet) => {\n        setActivePlanet(activePlanet?.name === planet.name ? null : planet);\n    };\n\n    const handleSunClick = () => {\n        setActivePlanet(null);\n    }\n    \n    return (\n        <div className=\"relative w-full h-[600px] flex items-center justify-center bg-black/20 rounded-lg overflow-hidden\">\n            {/* Main Orbit Container with Animation */}\n            <div className=\"relative w-[500px] h-[500px] animate-spin-slow\">\n                {/* Planets */}\n                {galaxyData.planets.map((planet, pIndex) => {\n                    const angle = (pIndex / galaxyData.planets.length) * 360;\n                    const orbitRadius = 220;\n\n                    return (\n                        <div\n                            key={planet.name}\n                            className=\"absolute top-1/2 left-1/2 w-0 h-0\"\n                            style={{\n                                transform: `rotate(${angle}deg) translate(${orbitRadius}px)`\n                            }}\n                        >\n                            <div \n                                className=\"animate-spin-reverse-slow\"\n                                onClick={(e) => { e.stopPropagation(); handlePlanetClick(planet); }}\n                            >\n                                <div className=\"flex flex-col items-center text-center cursor-pointer transition-all duration-300 hover:scale-110\">\n                                    <Sparkles className={`h-8 w-8 ${colors[pIndex % colors.length]}`} />\n                                    <p className={`text-sm font-semibold ${colors[pIndex % colors.length]} w-32`}>{planet.name}</p>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n\n            {/* Sun - placed outside the spinning container */}\n            <div \n                className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-24 h-24 bg-yellow-400 rounded-full flex items-center justify-center text-center text-black font-bold p-2 shadow-[0_0_20px_5px_rgba(252,208,76,0.7)] cursor-pointer z-10\"\n                onClick={handleSunClick}\n            >\n                {galaxyData.subject}\n            </div>\n\n            {/* Moons of Active Planet */}\n            {activePlanet && (\n                <div \n                    className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2\"\n                >\n                      <div className=\"relative w-[240px] h-[240px] animate-spin-slow\">\n                        {activePlanet.moons.map((moon, mIndex) => {\n                          const moonAngle = (mIndex / activePlanet.moons.length) * 360;\n                          const moonOrbitRadius = 120;\n                          return (\n                              <div\n                                  key={moon.name}\n                                  className=\"absolute top-1/2 left-1/2 w-0 h-0\"\n                                  style={{\n                                      transform: `rotate(${moonAngle}deg) translate(${moonOrbitRadius}px)`\n                                  }}\n                              >\n                                  <div className=\"animate-spin-reverse-slow\">\n                                    <div className=\"flex flex-col items-center text-center\">\n                                        <div className=\"w-4 h-4 bg-slate-400 rounded-full mb-1\"></div>\n                                        <p className=\"text-xs text-slate-300 w-24\">{moon.name}</p>\n                                    </div>\n                                  </div>\n                              </div>\n                          );\n                        })}\n                      </div>\n                </div>\n            )}\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;;;AAJA;;;AAUA,MAAM,SAAS;IACX;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AAEM,SAAS,aAAa,EAAE,UAAU,EAAqB;;IAC1D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,MAAM,oBAAoB,CAAC;QACvB,gBAAgB,cAAc,SAAS,OAAO,IAAI,GAAG,OAAO;IAChE;IAEA,MAAM,iBAAiB;QACnB,gBAAgB;IACpB;IAEA,qBACI,6LAAC;QAAI,WAAU;;0BAEX,6LAAC;gBAAI,WAAU;0BAEV,WAAW,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ;oBAC7B,MAAM,QAAQ,AAAC,SAAS,WAAW,OAAO,CAAC,MAAM,GAAI;oBACrD,MAAM,cAAc;oBAEpB,qBACI,6LAAC;wBAEG,WAAU;wBACV,OAAO;4BACH,WAAW,CAAC,OAAO,EAAE,MAAM,eAAe,EAAE,YAAY,GAAG,CAAC;wBAChE;kCAEA,cAAA,6LAAC;4BACG,WAAU;4BACV,SAAS,CAAC;gCAAQ,EAAE,eAAe;gCAAI,kBAAkB;4BAAS;sCAElE,cAAA,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,6MAAA,CAAA,WAAQ;wCAAC,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,OAAO,MAAM,CAAC,EAAE;;;;;;kDAChE,6LAAC;wCAAE,WAAW,CAAC,sBAAsB,EAAE,MAAM,CAAC,SAAS,OAAO,MAAM,CAAC,CAAC,KAAK,CAAC;kDAAG,OAAO,IAAI;;;;;;;;;;;;;;;;;uBAZ7F,OAAO,IAAI;;;;;gBAiB5B;;;;;;0BAIJ,6LAAC;gBACG,WAAU;gBACV,SAAS;0BAER,WAAW,OAAO;;;;;;YAItB,8BACG,6LAAC;gBACG,WAAU;0BAER,cAAA,6LAAC;oBAAI,WAAU;8BACZ,aAAa,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM;wBAC7B,MAAM,YAAY,AAAC,SAAS,aAAa,KAAK,CAAC,MAAM,GAAI;wBACzD,MAAM,kBAAkB;wBACxB,qBACI,6LAAC;4BAEG,WAAU;4BACV,OAAO;gCACH,WAAW,CAAC,OAAO,EAAE,UAAU,eAAe,EAAE,gBAAgB,GAAG,CAAC;4BACxE;sCAEA,cAAA,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACX,6LAAC;4CAAI,WAAU;;;;;;sDACf,6LAAC;4CAAE,WAAU;sDAA+B,KAAK,IAAI;;;;;;;;;;;;;;;;;2BATtD,KAAK,IAAI;;;;;oBAcxB;;;;;;;;;;;;;;;;;AAMxB;GAjFgB;KAAA","debugId":null}},
    {"offset": {"line": 4599, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/knowledge-galaxy.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { generateKnowledgeGalaxyAction } from '@/app/actions';\nimport type { GenerateKnowledgeGalaxyOutput, Planet, Moon } from '@/ai/schemas';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { AlertTriangle, Loader2, Sparkles, BrainCircuit, FileUp, BookText } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { GalaxyVisual } from './galaxy-visual';\n\nconst textFormSchema = z.object({\n  subject: z.string().min(3, { message: \"Subject must be at least 3 characters.\" }),\n});\n\nconst fileFormSchema = z.object({\n  file: z\n    .any()\n    .refine((files) => files?.length === 1, \"File is required.\")\n    .refine((files) => files?.[0]?.size <= 5000000, `Max file size is 5MB.`)\n    .refine(\n      (files) => [\"application/pdf\", \"text/plain\"].includes(files?.[0]?.type),\n      \".pdf and .txt files are accepted.\"\n    ),\n});\n\nexport function KnowledgeGalaxy() {\n  const [galaxyData, setGalaxyData] = useState<GenerateKnowledgeGalaxyOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n  \n  const textForm = useForm<z.infer<typeof textFormSchema>>({ \n    resolver: zodResolver(textFormSchema),\n    defaultValues: { subject: \"\" },\n  });\n\n  const fileForm = useForm<z.infer<typeof fileFormSchema>>({\n    resolver: zodResolver(fileFormSchema),\n    defaultValues: { file: undefined },\n  });\n  const fileRef = fileForm.register(\"file\");\n\n  const handleGeneration = async (values: { subject?: string; fileDataUri?: string }) => {\n    setIsLoading(true);\n    setGalaxyData(null);\n    try {\n      const result = await generateKnowledgeGalaxyAction(values);\n      if (result.error) throw new Error(result.error);\n      if (!result.galaxy || result.galaxy.planets.length === 0) {\n        toast({\n            title: \"Could not build galaxy\",\n            description: \"The AI was unable to generate a knowledge map for this. Try being more specific or using a different file.\",\n            variant: \"destructive\"\n        });\n        setGalaxyData(null);\n      } else {\n        setGalaxyData(result.galaxy);\n      }\n    } catch (e) {\n      const errorMessage = e instanceof Error ? e.message : \"An unknown error occurred.\";\n      toast({ variant: \"destructive\", title: \"Failed to create galaxy\", description: errorMessage });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const onTextSubmit = async (values: z.infer<typeof textFormSchema>) => {\n    await handleGeneration({ subject: values.subject });\n  };\n\n  const onFileSubmit = async (values: z.infer<typeof fileFormSchema>) => {\n    const file = values.file[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = async () => {\n        const fileDataUri = reader.result as string;\n        await handleGeneration({ fileDataUri, subject: file.name.replace(/\\.[^/.]+$/, \"\") });\n    };\n    reader.onerror = () => {\n      toast({ variant: \"destructive\", title: \"File Error\", description: \"Failed to read file.\"})\n    }\n  };\n\n\n  return (\n    <div className=\"space-y-6\">\n        <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n          <Tabs defaultValue=\"topic\" className=\"w-full\">\n            <CardHeader className=\"p-6\">\n              <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                <Sparkles className=\"h-6 w-6\" /> Knowledge Galaxy\n              </CardTitle>\n              <CardDescription>\n                Enter a subject or upload a syllabus to visualize its core concepts as an interactive galaxy.\n              </CardDescription>\n              <TabsList className=\"grid w-full grid-cols-2 mt-4\">\n                <TabsTrigger value=\"topic\"><BookText className=\"mr-2 h-4 w-4\"/>From Topic</TabsTrigger>\n                <TabsTrigger value=\"file\"><FileUp className=\"mr-2 h-4 w-4\"/>From File</TabsTrigger>\n              </TabsList>\n            </CardHeader>\n\n            <TabsContent value=\"topic\" className=\"p-0\">\n                <Form {...textForm}>\n                <form onSubmit={textForm.handleSubmit(onTextSubmit)}>\n                  <CardContent className=\"px-6 space-y-4\">\n                    <FormField\n                      control={textForm.control}\n                      name=\"subject\"\n                      render={({ field }) => (\n                          <FormItem className=\"w-full\">\n                          <FormLabel>Enter a Subject</FormLabel>\n                          <FormControl>\n                              <Input placeholder=\"e.g., Quantum Mechanics, Data Structures, Macroeconomics...\" {...field} />\n                          </FormControl>\n                          <FormMessage />\n                          </FormItem>\n                      )}\n                    />\n                  </CardContent>\n                  <CardFooter className=\"px-6 pb-6\">\n                    <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                      {isLoading ? <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Building...</> : <><BrainCircuit className=\"mr-2 h-4 w-4\" />Build Galaxy from Topic</>}\n                    </Button>\n                  </CardFooter>\n                </form>\n              </Form>\n            </TabsContent>\n            <TabsContent value=\"file\" className=\"p-0\">\n               <Form {...fileForm}>\n                <form onSubmit={fileForm.handleSubmit(onFileSubmit)}>\n                   <CardContent className=\"px-6 space-y-4\">\n                      <FormField\n                        control={fileForm.control}\n                        name=\"file\"\n                        render={() => (\n                          <FormItem>\n                            <FormLabel>Upload Syllabus (PDF or TXT)</FormLabel>\n                            <FormControl>\n                              <Input\n                                  type=\"file\"\n                                  accept=\".pdf,.txt\"\n                                  {...fileRef}\n                                  className=\"file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                   </CardContent>\n                   <CardFooter className=\"px-6 pb-6\">\n                      <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                        {isLoading ? <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Building...</> : <><BrainCircuit className=\"mr-2 h-4 w-4\" />Build Galaxy from File</>}\n                      </Button>\n                  </CardFooter>\n                </form>\n              </Form>\n            </TabsContent>\n          </Tabs>\n        </div>\n\n        {isLoading && (\n            <Card>\n                <CardContent className=\"p-6\">\n                    <div className=\"flex justify-center items-center h-[500px] flex-col gap-4\">\n                        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n                        <p className=\"text-muted-foreground\">AI is charting the cosmos of knowledge... this may take a moment.</p>\n                    </div>\n                </CardContent>\n            </Card>\n        )}\n\n        {galaxyData && (\n             <div\n                className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n                style={\n                    { \"--border-angle\": \"0deg\", backgroundImage: \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\" } as React.CSSProperties\n                }\n                >\n                <Card className=\"w-full shadow-lg\">\n                    <CardHeader>\n                        <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                            Galaxy for: {galaxyData.subject}\n                        </CardTitle>\n                        <CardDescription>\n                            Click on a planet to see its moons (sub-topics). Hover over a moon to see its description. Click the sun to zoom out.\n                        </CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                         <GalaxyVisual galaxyData={galaxyData} />\n                    </CardContent>\n                </Card>\n            </div>\n        )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5165, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/student-profile.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { getStudentList, getStudentProfileData } from '@/app/actions';\nimport type { StudentInfo, StudentProfileData, TeacherRemarkRecord } from '@/ai/schemas';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Bar, BarChart, CartesianGrid, XAxis, YAxis } from \"recharts\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { AlertTriangle, UserCircle, Loader2, CalendarCheck, Tags, PenSquare, Sparkles, BookOpen, MoveUpRight } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { GlowCard } from './ui/spotlight-card';\n\nconst chartConfig = {\n  score: {\n    label: \"Score\",\n    color: \"hsl(var(--chart-1))\",\n  },\n};\n\nfunction CallToActionCard() {\n    return (\n        <div className=\"text-center py-10 border-2 border-dashed rounded-lg mt-6 bg-background/50\">\n            <div className=\"flex justify-center items-center mb-4\">\n                <div className=\"p-4 rounded-full bg-primary/10\">\n                     <UserCircle className=\"h-12 w-12 text-primary\" />\n                </div>\n            </div>\n            <h3 className=\"text-2xl font-bold text-foreground\">Welcome to your Dashboard</h3>\n            <p className=\"text-md text-muted-foreground mt-2 max-w-md mx-auto\">\n                Select a student from the dropdown above to view their complete academic and behavioral profile.\n            </p>\n             <div className=\"mt-6 flex justify-center\">\n                <MoveUpRight className=\"h-8 w-8 text-muted-foreground animate-pulse\" />\n            </div>\n        </div>\n    )\n}\n\nexport function StudentProfile() {\n  const [studentList, setStudentList] = useState<StudentInfo[]>([]);\n  const [selectedRollNo, setSelectedRollNo] = useState<string | null>(null);\n  const [profileData, setProfileData] = useState<StudentProfileData | null>(null);\n  const [isLoadingList, setIsLoadingList] = useState(true);\n  const [isLoadingProfile, setIsLoadingProfile] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function loadStudentList() {\n      setIsLoadingList(true);\n      setError(null);\n      const result = await getStudentList();\n      if (result.error) {\n        setError(result.error);\n      } else {\n        setStudentList(result.students || []);\n      }\n      setIsLoadingList(false);\n    }\n    loadStudentList();\n  }, []);\n\n  const handleStudentSelect = async (rollNo: string) => {\n    setSelectedRollNo(rollNo);\n    if (!rollNo) {\n        setProfileData(null);\n        return;\n    }\n    setIsLoadingProfile(true);\n    setError(null);\n    setProfileData(null);\n    const result = await getStudentProfileData(rollNo);\n    if (result.error) {\n      setError(result.error);\n    } else {\n      setProfileData(result.profile || null);\n    }\n    setIsLoadingProfile(false);\n  };\n\n  return (\n    <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n    <Card className=\"w-full shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n            <UserCircle className=\"h-6 w-6\" /> Student Profile Dashboard\n        </CardTitle>\n        <CardDescription>\n            Select a student to view their comprehensive academic and behavioral profile.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"w-full md:w-1/2\">\n            <label htmlFor=\"student-select\" className=\"font-medium text-sm\">Select Student</label>\n            {isLoadingList ? (\n                <Skeleton className=\"h-10 w-full mt-2\" />\n            ) : (\n                <Select onValueChange={handleStudentSelect} value={selectedRollNo ?? ''} disabled={studentList.length === 0}>\n                    <SelectTrigger id=\"student-select\" className=\"mt-2\">\n                        <SelectValue placeholder=\"Choose a student...\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                        {studentList.map(student => (\n                            <SelectItem key={student.roll_no} value={student.roll_no}>\n                                {student.student_name} ({student.roll_no})\n                            </SelectItem>\n                        ))}\n                    </SelectContent>\n                </Select>\n            )}\n        </div>\n\n        {error && (\n            <Alert variant=\"destructive\">\n                <AlertTriangle className=\"h-4 w-4\" />\n                <AlertTitle>Error</AlertTitle>\n                <AlertDescription>{error}</AlertDescription>\n            </Alert>\n        )}\n\n        {isLoadingProfile && <ProfileSkeleton />}\n\n        {!isLoadingProfile && profileData && (\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 pt-4\">\n                <div className=\"lg:col-span-1 space-y-6\">\n                    <GlowCard customSize className=\"p-0\">\n                        <Card className=\"bg-transparent w-full h-full\">\n                            <CardHeader>\n                                <CardTitle className=\"text-lg flex items-center gap-2\"><CalendarCheck className=\"h-5 w-5\" />Attendance</CardTitle>\n                            </CardHeader>\n                            <CardContent className=\"space-y-3\">\n                                <Progress value={profileData.attendance.percentage} className=\"h-3\" />\n                                <div className=\"flex justify-between items-center text-sm\">\n                                    <span className=\"font-bold text-2xl\">{profileData.attendance.percentage}%</span>\n                                    <span className=\"text-muted-foreground\">{profileData.attendance.presentDays} / {profileData.attendance.totalDays} Days</span>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </GlowCard>\n                     <GlowCard customSize className=\"p-0\" glowColor=\"purple\">\n                        <Card className=\"bg-transparent w-full h-full\">\n                            <CardHeader>\n                                <CardTitle className=\"text-lg flex items-center gap-2\"><Tags className=\"h-5 w-5\" />Behavior Tags</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                                {profileData.behaviorTags.length > 0 ? (\n                                    <div className=\"flex flex-wrap gap-2\">\n                                        {profileData.behaviorTags.map(tag => <Badge key={tag} variant=\"secondary\">{tag}</Badge>)}\n                                    </div>\n                                ) : <p className=\"text-sm text-muted-foreground\">No behavior tags recorded.</p>}\n                            </CardContent>\n                        </Card>\n                     </GlowCard>\n                    <GlowCard customSize className=\"p-0\" glowColor=\"orange\">\n                        <Card className=\"bg-transparent w-full h-full\">\n                            <CardHeader>\n                                <CardTitle className=\"text-lg flex items-center gap-2\"><Sparkles className=\"h-5 w-5\" />AI Summary</CardTitle>\n                            </CardHeader>\n                            <CardContent>\n                                <p className=\"text-sm text-muted-foreground\">{profileData.aiFeedback || 'No AI-generated feedback available.'}</p>\n                            </CardContent>\n                        </Card>\n                    </GlowCard>\n                </div>\n                <div className=\"lg:col-span-2 space-y-6\">\n                    <Card>\n                        <CardHeader>\n                            <CardTitle className=\"text-lg flex items-center gap-2\"><BookOpen className=\"h-5 w-5\" />Academic Performance</CardTitle>\n                             <CardDescription>Internal marks (out of 30) across different subjects.</CardDescription>\n                        </CardHeader>\n                        <CardContent>\n                            {profileData.marks.length > 0 ? (\n                                <ChartContainer config={chartConfig} className=\"h-[250px] w-full\">\n                                    <BarChart data={profileData.marks} accessibilityLayer margin={{ top: 20, right: 20, left: -20, bottom: 5 }}>\n                                        <CartesianGrid vertical={false} />\n                                        <XAxis dataKey=\"subject\" tickLine={false} tickMargin={10} axisLine={false} tickFormatter={(value) => value.slice(0, 3)} />\n                                        <YAxis domain={[0, 30]} />\n                                        <ChartTooltip cursor={false} content={<ChartTooltipContent />} />\n                                        <Bar dataKey=\"internal_score\" name=\"Score\" fill=\"var(--color-score)\" radius={4} />\n                                    </BarChart>\n                                </ChartContainer>\n                            ) : <p className=\"text-sm text-muted-foreground text-center py-10\">No mark data available.</p>}\n                        </CardContent>\n                    </Card>\n                    <Card>\n                        <CardHeader>\n                             <CardTitle className=\"text-lg flex items-center gap-2\"><PenSquare className=\"h-5 w-5\" />Teacher Remarks</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            {profileData.remarks.length > 0 ? (\n                                <div className=\"space-y-4 max-h-[200px] overflow-y-auto pr-2\">\n                                    {profileData.remarks.map(remark => (\n                                        <div key={remark.id} className=\"text-sm border-l-2 pl-3\">\n                                            <p className=\"font-medium\">{remark.remark}</p>\n                                            <p className=\"text-xs text-muted-foreground\">\n                                                on {format(new Date(remark.created_at), 'PPP')} for {remark.subject}\n                                            </p>\n                                        </div>\n                                    ))}\n                                </div>\n                            ) : <p className=\"text-sm text-muted-foreground\">No remarks have been added.</p>}\n                        </CardContent>\n                    </Card>\n                </div>\n            </div>\n        )}\n        \n        {!isLoadingProfile && !selectedRollNo && studentList.length > 0 && (\n            <CallToActionCard />\n        )}\n\n        {!isLoadingProfile && !isLoadingList && studentList.length === 0 && (\n            <div className=\"text-center py-10 border-2 border-dashed rounded-lg mt-6\">\n                <h3 className=\"text-lg font-semibold text-muted-foreground\">No Student Data Found</h3>\n                <p className=\"text-sm text-muted-foreground mt-1\">Add attendance records to populate the student list.</p>\n            </div>\n        )}\n      </CardContent>\n    </Card>\n    </div>\n  );\n}\n\nconst ProfileSkeleton = () => (\n    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 pt-4\">\n        <div className=\"lg:col-span-1 space-y-6\">\n            <Skeleton className=\"h-32 w-full\" />\n            <Skeleton className=\"h-24 w-full\" />\n            <Skeleton className=\"h-24 w-full\" />\n        </div>\n        <div className=\"lg:col-span-2 space-y-6\">\n            <Skeleton className=\"h-80 w-full\" />\n            <Skeleton className=\"h-48 w-full\" />\n        </div>\n    </div>\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6043, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/academic-calendar.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { format, parse } from \"date-fns\";\nimport { getAcademicEventsAction, saveAcademicEventAction } from '@/app/actions';\nimport { SaveAcademicEventInputSchema, type SaveAcademicEventInput, type AcademicEventRecord } from \"@/ai/schemas\";\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { AlertTriangle, Calendar as CalendarIcon, Loader2, PlusCircle, CalendarDays } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from '@/lib/utils';\nimport { Badge } from './ui/badge';\n\nfunction AddEventForm({ onSuccess }: { onSuccess: () => void }) {\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const { toast } = useToast();\n\n    const form = useForm<SaveAcademicEventInput>({\n        resolver: zodResolver(SaveAcademicEventInputSchema),\n        defaultValues: {\n            title: \"\",\n            description: \"\",\n            event_type: \"exam\",\n        },\n    });\n\n    async function onSubmit(values: SaveAcademicEventInput) {\n        setIsSubmitting(true);\n        try {\n            const result = await saveAcademicEventAction(values);\n            if (result.error) throw new Error(result.error);\n            toast({ title: \"Success\", description: result.message });\n            form.reset({\n                title: \"\",\n                description: \"\",\n                event_date: undefined,\n                event_type: \"exam\",\n            });\n            onSuccess();\n        } catch (e) {\n            const errorMessage = e instanceof Error ? e.message : \"An unknown error occurred.\";\n            toast({ variant: \"destructive\", title: \"Submission Failed\", description: errorMessage });\n        } finally {\n            setIsSubmitting(false);\n        }\n    }\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle className='text-lg flex items-center gap-2'><PlusCircle className='h-5 w-5' />Add New Event</CardTitle>\n            </CardHeader>\n            <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)}>\n                    <CardContent className=\"space-y-4\">\n                        <FormField control={form.control} name=\"title\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Event Title</FormLabel>\n                                <FormControl><Input placeholder=\"e.g. Mid-term Examinations\" {...field} /></FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <FormField control={form.control} name=\"description\" render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Description (Optional)</FormLabel>\n                                <FormControl><Textarea placeholder=\"e.g. For all 2nd year students.\" {...field} /></FormControl>\n                                <FormMessage />\n                            </FormItem>\n                        )} />\n                        <div className=\"grid md:grid-cols-2 gap-4\">\n                            <FormField control={form.control} name=\"event_date\" render={({ field }) => (\n                                <FormItem className=\"flex flex-col\">\n                                    <FormLabel>Event Date</FormLabel>\n                                    <Popover>\n                                        <PopoverTrigger asChild>\n                                            <FormControl>\n                                                <Button\n                                                    variant={\"outline\"}\n                                                    className={cn(\"pl-3 text-left font-normal\", !field.value && \"text-muted-foreground\")}\n                                                >\n                                                    {field.value ? format(field.value, \"PPP\") : <span>Pick a date</span>}\n                                                    <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                                                </Button>\n                                            </FormControl>\n                                        </PopoverTrigger>\n                                        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                                            <Calendar\n                                                mode=\"single\"\n                                                selected={field.value}\n                                                onSelect={field.onChange}\n                                                disabled={(date) => {\n                                                    const today = new Date();\n                                                    today.setHours(0, 0, 0, 0);\n                                                    return date < today;\n                                                }}\n                                                initialFocus\n                                            />\n                                        </PopoverContent>\n                                    </Popover>\n                                    <FormMessage />\n                                </FormItem>\n                            )} />\n                            <FormField control={form.control} name=\"event_type\" render={({ field }) => (\n                                <FormItem>\n                                    <FormLabel>Event Type</FormLabel>\n                                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                        <FormControl><SelectTrigger><SelectValue placeholder=\"Select type\" /></SelectTrigger></FormControl>\n                                        <SelectContent>\n                                            <SelectItem value=\"exam\">📘 Exam</SelectItem>\n                                            <SelectItem value=\"holiday\">🟥 Holiday</SelectItem>\n                                            <SelectItem value=\"meeting\">🟨 Meeting</SelectItem>\n                                        </SelectContent>\n                                    </Select>\n                                    <FormMessage />\n                                </FormItem>\n                            )} />\n                        </div>\n                    </CardContent>\n                    <CardFooter>\n                        <Button type=\"submit\" disabled={isSubmitting} className='w-full'>\n                            {isSubmitting ? <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Saving...</> : \"Add Event\"}\n                        </Button>\n                    </CardFooter>\n                </form>\n            </Form>\n        </Card>\n    )\n}\n\nfunction EventDots({ events }: { events: AcademicEventRecord[] }) {\n    if (!events || events.length === 0) return null;\n    return (\n        <div className=\"event-dots\">\n            {events.slice(0, 3).map(event => ( // Show max 3 dots\n                <div key={event.id} className={cn(\"event-dot\", `event-${event.event_type}`)}></div>\n            ))}\n        </div>\n    );\n}\n\nconst EventTypeBadge = ({ type }: { type: AcademicEventRecord['event_type'] }) => {\n    const typeMap = {\n        exam: { label: \"Exam\", color: \"bg-blue-100 text-blue-800\" },\n        holiday: { label: \"Holiday\", color: \"bg-red-100 text-red-800\" },\n        meeting: { label: \"Meeting\", color: \"bg-yellow-100 text-yellow-800\" },\n    };\n    const { label, color } = typeMap[type!] || { label: \"Event\", color: \"bg-gray-100 text-gray-800\" };\n    return <Badge className={cn(color, 'border-transparent')}>{label}</Badge>;\n};\n\n\nexport function AcademicCalendar() {\n    const [events, setEvents] = useState<AcademicEventRecord[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n    \n    const loadData = useCallback(async () => {\n        setIsLoading(true);\n        const result = await getAcademicEventsAction();\n        if (result.error) {\n            setError(result.error);\n        } else {\n            setEvents(result.events || []);\n        }\n        setIsLoading(false);\n    }, []);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n    \n    const eventsByDate = useMemo(() => {\n        return events.reduce((acc, event) => {\n            // Parse the date string as UTC to avoid timezone shifts\n            const date = parse(event.event_date, 'yyyy-MM-dd', new Date());\n            const dateStr = format(date, 'yyyy-MM-dd');\n\n            if (!acc[dateStr]) {\n                acc[dateStr] = [];\n            }\n            acc[dateStr].push(event);\n            return acc;\n        }, {} as Record<string, AcademicEventRecord[]>);\n    }, [events]);\n\n    const selectedDateEvents = eventsByDate[format(selectedDate, 'yyyy-MM-dd')] || [];\n\n    return (\n        <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n        <Card className=\"w-full shadow-lg\">\n            <CardHeader>\n                <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                    <CalendarDays className=\"h-6 w-6\" /> Academic Calendar\n                </CardTitle>\n                <CardDescription>\n                    Add and view important academic events, holidays, and meetings.\n                </CardDescription>\n            </CardHeader>\n            <CardContent className=\"grid lg:grid-cols-3 gap-8\">\n                <div className=\"lg:col-span-2\">\n                    {isLoading ? (\n                        <Skeleton className=\"w-full h-[400px]\" />\n                    ) : error ? (\n                        <Alert variant=\"destructive\">\n                            <AlertTriangle className=\"h-4 w-4\" />\n                            <AlertTitle>Error Loading Calendar</AlertTitle>\n                            <AlertDescription>{error}</AlertDescription>\n                        </Alert>\n                    ) : (\n                        <Calendar\n                            mode=\"single\"\n                            selected={selectedDate}\n                            onSelect={(date) => setSelectedDate(date || new Date())}\n                            className=\"rounded-md border p-0\"\n                            classNames={{\n                                month: 'space-y-4 p-3',\n                                day_cell: 'relative'\n                            }}\n                            components={{\n                                DayContent: ({ date }) => {\n                                    const dateEvents = eventsByDate[format(date, 'yyyy-MM-dd')];\n                                    return (\n                                        <>\n                                            <span>{date.getDate()}</span>\n                                            <EventDots events={dateEvents} />\n                                        </>\n                                    );\n                                }\n                            }}\n                        />\n                    )}\n                    <div className=\"flex justify-center gap-4 mt-4 text-xs\">\n                        <div className=\"flex items-center gap-2\"><div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>Exam</div>\n                        <div className=\"flex items-center gap-2\"><div className=\"w-3 h-3 rounded-full bg-red-500\"></div>Holiday</div>\n                        <div className=\"flex items-center gap-2\"><div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>Meeting</div>\n                    </div>\n                </div>\n\n                <div className='space-y-6'>\n                    <AddEventForm onSuccess={loadData} />\n                    \n                    <Card>\n                        <CardHeader>\n                            <CardTitle className='text-lg'>Events on {format(selectedDate, \"PPP\")}</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            {selectedDateEvents.length > 0 ? (\n                                <ul className=\"space-y-3\">\n                                    {selectedDateEvents.map(event => (\n                                        <li key={event.id} className=\"text-sm\">\n                                            <div className=\"flex justify-between items-start\">\n                                                <p className=\"font-semibold\">{event.title}</p>\n                                                <EventTypeBadge type={event.event_type} />\n                                            </div>\n                                            {event.description && <p className=\"text-muted-foreground text-xs mt-1\">{event.description}</p>}\n                                        </li>\n                                    ))}\n                                </ul>\n                            ) : (\n                                <p className=\"text-sm text-muted-foreground text-center py-4\">No events scheduled for this day.</p>\n                            )}\n                        </CardContent>\n                    </Card>\n                </div>\n            </CardContent>\n        </Card>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6917, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/assignment-grader.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, GraduationCap, FileUp, Sparkles, CheckCircle } from \"lucide-react\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { gradeAssignmentAction } from \"@/app/actions\";\nimport type { GradeAssignmentOutput } from \"@/ai/schemas\";\nimport { Skeleton } from \"./ui/skeleton\";\n\nconst formSchema = z.object({\n    studentName: z.string().min(2, { message: \"Student name must be at least 2 characters.\" }),\n    subject: z.string().min(2, { message: \"Subject must be at least 2 characters.\" }),\n    file: z\n        .any()\n        .refine((files) => files?.length === 1, \"Assignment file is required.\")\n        .refine((files) => files?.[0]?.size <= 5000000, `Max file size is 5MB.`)\n        .refine(\n            (files) => [\"application/pdf\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"].includes(files?.[0]?.type),\n            \".pdf and .docx files are accepted.\"\n        ),\n});\n\nexport function AssignmentGrader() {\n  const [gradingResult, setGradingResult] = useState<GradeAssignmentOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      studentName: \"\",\n      subject: \"\",\n      file: undefined,\n    },\n  });\n  const fileRef = form.register(\"file\");\n\n  const readFileAsDataURL = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = (error) => reject(error);\n      reader.readAsDataURL(file);\n    });\n  };\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsLoading(true);\n    setGradingResult(null);\n\n    try {\n        const file = values.file[0];\n        const fileDataUri = await readFileAsDataURL(file);\n\n        const result = await gradeAssignmentAction({\n            studentName: values.studentName,\n            subject: values.subject,\n            fileDataUri: fileDataUri,\n        });\n\n        if (result.error) {\n            throw new Error(result.error);\n        }\n        setGradingResult(result.result || null);\n        if (result.result) {\n             toast({\n                title: \"Grading Complete\",\n                description: \"The assignment has been successfully graded and saved.\",\n            });\n        }\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\n        toast({\n            variant: \"destructive\",\n            title: \"Error Grading Assignment\",\n            description: errorMessage,\n        });\n    } finally {\n        setIsLoading(false);\n    }\n  }\n\n  return (\n    <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n    <Card className=\"w-full shadow-lg\">\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)}>\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n              <GraduationCap className=\"h-6 w-6\" /> AI Assignment Grader\n            </CardTitle>\n            <CardDescription>\n              Upload a student's assignment (PDF/DOCX) to get an AI-powered score and feedback.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div className=\"grid md:grid-cols-2 gap-6\">\n                 <FormField\n                    control={form.control}\n                    name=\"studentName\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Student Name</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Alex Johnson\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={form.control}\n                    name=\"subject\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Subject</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"e.g., Quantum Physics\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n            </div>\n            <FormField\n                control={form.control}\n                name=\"file\"\n                render={() => (\n                    <FormItem>\n                        <FormLabel className=\"flex items-center gap-2\"><FileUp className=\"h-4 w-4\" />Assignment Document</FormLabel>\n                        <FormControl>\n                            <Input\n                                type=\"file\"\n                                accept=\".pdf,.docx,application/pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                                {...fileRef}\n                                className=\"file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n                            />\n                        </FormControl>\n                        <FormMessage />\n                    </FormItem>\n                )}\n            />\n             {isLoading && (\n                 <div className=\"space-y-4 pt-4\">\n                     <p className=\"text-sm text-center text-muted-foreground flex items-center justify-center gap-2\">\n                         <Loader2 className=\"h-4 w-4 animate-spin\" />\n                         AI is reading and grading the assignment... this may take a moment.\n                     </p>\n                    <Skeleton className=\"h-16 w-full\" />\n                    <Skeleton className=\"h-24 w-full\" />\n                </div>\n            )}\n            {gradingResult && (\n                <div className=\"space-y-4 pt-4\">\n                    <Alert variant=\"default\" className=\"bg-secondary/50\">\n                        <CheckCircle className=\"h-4 w-4\" />\n                        <AlertTitle className=\"text-xl\">Grading Complete!</AlertTitle>\n                        <AlertDescription className=\"space-y-2\">\n                             <div className=\"flex items-baseline gap-2 pt-2\">\n                                <span className=\"text-4xl font-bold text-primary\">{gradingResult.score}</span>\n                                <span className=\"text-lg text-muted-foreground\">/ 10</span>\n                            </div>\n                            <div>\n                                <h4 className=\"font-semibold flex items-center gap-2\"><Sparkles className=\"h-4 w-4 text-yellow-500\" />Feedback</h4>\n                                <p className=\"text-muted-foreground\">{gradingResult.feedback}</p>\n                            </div>\n                        </AlertDescription>\n                    </Alert>\n                </div>\n            )}\n          </CardContent>\n          <CardFooter>\n            <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n              {isLoading ? (\n                <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Grading...</>\n              ) : (\"Grade Assignment\")}\n            </Button>\n          </CardFooter>\n        </form>\n      </Form>\n    </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7427, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/project-tracker-form.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { ProjectTrackerInputSchema, type ProjectTrackerInput, type ProjectTrackerRecord } from \"@/ai/schemas\";\nimport { saveOrUpdateProjectTrackerAction } from \"@/app/actions\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from \"@/components/ui/dialog\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2 } from \"lucide-react\";\nimport { Separator } from \"./ui/separator\";\n\ntype ProjectTrackerFormProps = {\n  isOpen: boolean;\n  setIsOpen: (open: boolean) => void;\n  onSuccess: () => void;\n  record: ProjectTrackerRecord | null;\n};\n\nexport function ProjectTrackerForm({ isOpen, setIsOpen, onSuccess, record }: ProjectTrackerFormProps) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<ProjectTrackerInput>({\n    resolver: zodResolver(ProjectTrackerInputSchema),\n    defaultValues: {\n        id: undefined,\n        student_name: \"\",\n        roll_no: \"\",\n        project_title: \"\",\n        mentor_name: \"\",\n        topic_selected: false,\n        review1_score: undefined,\n        review1_feedback: \"\",\n        review2_score: undefined,\n        review2_feedback: \"\",\n        final_submission: false,\n        final_score: undefined,\n        final_feedback: \"\",\n    },\n  });\n\n  useEffect(() => {\n    if (record) {\n        form.reset({\n            id: record.id,\n            student_name: record.student_name,\n            roll_no: record.roll_no,\n            project_title: record.project_title,\n            mentor_name: record.mentor_name,\n            topic_selected: record.topic_selected,\n            review1_score: record.review1_score ?? undefined,\n            review1_feedback: record.review1_feedback ?? \"\",\n            review2_score: record.review2_score ?? undefined,\n            review2_feedback: record.review2_feedback ?? \"\",\n            final_submission: record.final_submission,\n            final_score: record.final_score ?? undefined,\n            final_feedback: record.final_feedback ?? \"\",\n        });\n    } else {\n        form.reset({\n            id: undefined,\n            student_name: \"\",\n            roll_no: \"\",\n            project_title: \"\",\n            mentor_name: \"\",\n            topic_selected: false,\n            review1_score: undefined,\n            review1_feedback: \"\",\n            review2_score: undefined,\n            review2_feedback: \"\",\n            final_submission: false,\n            final_score: undefined,\n            final_feedback: \"\",\n        });\n    }\n  }, [record, isOpen, form]);\n\n  async function onSubmit(values: ProjectTrackerInput) {\n    setIsSubmitting(true);\n    try {\n      const result = await saveOrUpdateProjectTrackerAction(values);\n      if (result.error) {\n        throw new Error(result.error);\n      }\n      toast({ title: \"Success\", description: result.message });\n      onSuccess();\n    } catch (e) {\n      const errorMessage = e instanceof Error ? e.message : \"An unknown error occurred.\";\n      toast({ variant: \"destructive\", title: \"Submission Failed\", description: errorMessage });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogContent className=\"sm:max-w-2xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>{record ? 'Edit Project' : 'Track New Project'}</DialogTitle>\n          <DialogDescription>\n            {record ? 'Update the details for this student project.' : 'Enter the details for a new student project.'}\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 pt-4\">\n            <h3 className=\"text-lg font-semibold\">Student & Project Info</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n                <FormField control={form.control} name=\"student_name\" render={({ field }) => (\n                    <FormItem><FormLabel>Student Name</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>\n                )} />\n                <FormField control={form.control} name=\"roll_no\" render={({ field }) => (\n                    <FormItem><FormLabel>Roll Number</FormLabel><FormControl><Input {...field} disabled={!!record} /></FormControl><FormMessage /></FormItem>\n                )} />\n            </div>\n             <div className=\"grid grid-cols-2 gap-4\">\n                <FormField control={form.control} name=\"project_title\" render={({ field }) => (\n                    <FormItem><FormLabel>Project Title</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>\n                )} />\n                <FormField control={form.control} name=\"mentor_name\" render={({ field }) => (\n                    <FormItem><FormLabel>Mentor Name</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>\n                )} />\n            </div>\n            \n            <FormField control={form.control} name=\"topic_selected\" render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n                    <FormControl><Checkbox checked={field.value} onCheckedChange={field.onChange} /></FormControl>\n                    <div className=\"space-y-1 leading-none\"><FormLabel>Topic Selected</FormLabel><FormDescription>Has the project topic been finalized?</FormDescription></div>\n                </FormItem>\n            )} />\n\n            <Separator className=\"my-6\" />\n\n            <h3 className=\"text-lg font-semibold\">Review 1</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n                <FormField control={form.control} name=\"review1_score\" render={({ field }) => (\n                    <FormItem><FormLabel>Score (out of 100)</FormLabel><FormControl><Input type=\"number\" {...field} value={field.value ?? ''} /></FormControl><FormMessage /></FormItem>\n                )} />\n                <FormField control={form.control} name=\"review1_feedback\" render={({ field }) => (\n                    <FormItem><FormLabel>Feedback</FormLabel><FormControl><Textarea {...field} value={field.value ?? ''} /></FormControl><FormMessage /></FormItem>\n                )} />\n            </div>\n\n            <Separator className=\"my-6\" />\n\n            <h3 className=\"text-lg font-semibold\">Review 2</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n                <FormField control={form.control} name=\"review2_score\" render={({ field }) => (\n                    <FormItem><FormLabel>Score (out of 100)</FormLabel><FormControl><Input type=\"number\" {...field} value={field.value ?? ''} /></FormControl><FormMessage /></FormItem>\n                )} />\n                <FormField control={form.control} name=\"review2_feedback\" render={({ field }) => (\n                    <FormItem><FormLabel>Feedback</FormLabel><FormControl><Textarea {...field} value={field.value ?? ''} /></FormControl><FormMessage /></FormItem>\n                )} />\n            </div>\n\n            <Separator className=\"my-6\" />\n\n             <h3 className=\"text-lg font-semibold\">Final Submission</h3>\n             <FormField control={form.control} name=\"final_submission\" render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n                    <FormControl><Checkbox checked={field.value} onCheckedChange={field.onChange} /></FormControl>\n                    <div className=\"space-y-1 leading-none\"><FormLabel>Final Project Submitted</FormLabel><FormDescription>Has the final project been submitted?</FormDescription></div>\n                </FormItem>\n            )} />\n            <div className=\"grid grid-cols-2 gap-4\">\n                <FormField control={form.control} name=\"final_score\" render={({ field }) => (\n                    <FormItem><FormLabel>Final Score (out of 100)</FormLabel><FormControl><Input type=\"number\" {...field} value={field.value ?? ''} /></FormControl><FormMessage /></FormItem>\n                )} />\n                <FormField control={form.control} name=\"final_feedback\" render={({ field }) => (\n                    <FormItem><FormLabel>Final Feedback</FormLabel><FormControl><Textarea {...field} value={field.value ?? ''} /></FormControl><FormMessage /></FormItem>\n                )} />\n            </div>\n            \n            <DialogFooter className=\"pt-4\">\n                <Button type=\"button\" variant=\"ghost\" onClick={() => setIsOpen(false)}>Cancel</Button>\n                <Button type=\"submit\" disabled={isSubmitting}>\n                    {isSubmitting ? <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Saving...</> : \"Save Project\"}\n                </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAfA;;;;;;;;;;;;;;;AAwBO,SAAS,mBAAmB,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAA2B;;IAClG,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAuB;QACxC,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE,uHAAA,CAAA,4BAAyB;QAC/C,eAAe;YACX,IAAI;YACJ,cAAc;YACd,SAAS;YACT,eAAe;YACf,aAAa;YACb,gBAAgB;YAChB,eAAe;YACf,kBAAkB;YAClB,eAAe;YACf,kBAAkB;YAClB,kBAAkB;YAClB,aAAa;YACb,gBAAgB;QACpB;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,IAAI,QAAQ;gBACR,KAAK,KAAK,CAAC;oBACP,IAAI,OAAO,EAAE;oBACb,cAAc,OAAO,YAAY;oBACjC,SAAS,OAAO,OAAO;oBACvB,eAAe,OAAO,aAAa;oBACnC,aAAa,OAAO,WAAW;oBAC/B,gBAAgB,OAAO,cAAc;oBACrC,eAAe,OAAO,aAAa,IAAI;oBACvC,kBAAkB,OAAO,gBAAgB,IAAI;oBAC7C,eAAe,OAAO,aAAa,IAAI;oBACvC,kBAAkB,OAAO,gBAAgB,IAAI;oBAC7C,kBAAkB,OAAO,gBAAgB;oBACzC,aAAa,OAAO,WAAW,IAAI;oBACnC,gBAAgB,OAAO,cAAc,IAAI;gBAC7C;YACJ,OAAO;gBACH,KAAK,KAAK,CAAC;oBACP,IAAI;oBACJ,cAAc;oBACd,SAAS;oBACT,eAAe;oBACf,aAAa;oBACb,gBAAgB;oBAChB,eAAe;oBACf,kBAAkB;oBAClB,eAAe;oBACf,kBAAkB;oBAClB,kBAAkB;oBAClB,aAAa;oBACb,gBAAgB;gBACpB;YACJ;QACF;uCAAG;QAAC;QAAQ;QAAQ;KAAK;IAEzB,eAAe,SAAS,MAA2B;QACjD,gBAAgB;QAChB,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,qJAAA,CAAA,mCAAgC,AAAD,EAAE;YACtD,IAAI,OAAO,KAAK,EAAE;gBAChB,MAAM,IAAI,MAAM,OAAO,KAAK;YAC9B;YACA,MAAM;gBAAE,OAAO;gBAAW,aAAa,OAAO,OAAO;YAAC;YACtD;QACF,EAAE,OAAO,GAAG;YACV,MAAM,eAAe,aAAa,QAAQ,EAAE,OAAO,GAAG;YACtD,MAAM;gBAAE,SAAS;gBAAe,OAAO;gBAAqB,aAAa;YAAa;QACxF,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,cAAW;sCAAE,SAAS,iBAAiB;;;;;;sCACxC,6LAAC,qIAAA,CAAA,oBAAiB;sCACf,SAAS,iDAAiD;;;;;;;;;;;;8BAG/D,6LAAC,mIAAA,CAAA,OAAI;oBAAE,GAAG,IAAI;8BACZ,cAAA,6LAAC;wBAAK,UAAU,KAAK,YAAY,CAAC;wBAAW,WAAU;;0CACrD,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAe,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACpE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAAwB,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,oIAAA,CAAA,QAAK;4DAAE,GAAG,KAAK;;;;;;;;;;;kEAAkB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kDAE5G,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAU,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAC/D,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAAuB,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,oIAAA,CAAA,QAAK;4DAAE,GAAG,KAAK;4DAAE,UAAU,CAAC,CAAC;;;;;;;;;;;kEAAwB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;0CAGlI,6LAAC;gCAAI,WAAU;;kDACZ,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAgB,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACrE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAAyB,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,oIAAA,CAAA,QAAK;4DAAE,GAAG,KAAK;;;;;;;;;;;kEAAkB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kDAE7G,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAc,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACnE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAAuB,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,oIAAA,CAAA,QAAK;4DAAE,GAAG,KAAK;;;;;;;;;;;kEAAkB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;0CAI/G,6LAAC,mIAAA,CAAA,YAAS;gCAAC,SAAS,KAAK,OAAO;gCAAE,MAAK;gCAAiB,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACtE,6LAAC,mIAAA,CAAA,WAAQ;wCAAC,WAAU;;0DAChB,6LAAC,mIAAA,CAAA,cAAW;0DAAC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;oDAAC,SAAS,MAAM,KAAK;oDAAE,iBAAiB,MAAM,QAAQ;;;;;;;;;;;0DAC5E,6LAAC;gDAAI,WAAU;;kEAAyB,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAA0B,6LAAC,mIAAA,CAAA,kBAAe;kEAAC;;;;;;;;;;;;;;;;;;;;;;;0CAItG,6LAAC,wIAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CAErB,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAgB,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACrE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAA8B,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,oIAAA,CAAA,QAAK;4DAAC,MAAK;4DAAU,GAAG,KAAK;4DAAE,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;kEAAoB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kDAE1J,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAmB,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACxE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAAoB,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;4DAAE,GAAG,KAAK;4DAAE,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;kEAAoB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;0CAIzI,6LAAC,wIAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CAErB,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAgB,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACrE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAA8B,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,oIAAA,CAAA,QAAK;4DAAC,MAAK;4DAAU,GAAG,KAAK;4DAAE,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;kEAAoB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kDAE1J,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAmB,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACxE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAAoB,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;4DAAE,GAAG,KAAK;4DAAE,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;kEAAoB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;0CAIzI,6LAAC,wIAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CAEpB,6LAAC;gCAAG,WAAU;0CAAwB;;;;;;0CACtC,6LAAC,mIAAA,CAAA,YAAS;gCAAC,SAAS,KAAK,OAAO;gCAAE,MAAK;gCAAmB,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACzE,6LAAC,mIAAA,CAAA,WAAQ;wCAAC,WAAU;;0DAChB,6LAAC,mIAAA,CAAA,cAAW;0DAAC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;oDAAC,SAAS,MAAM,KAAK;oDAAE,iBAAiB,MAAM,QAAQ;;;;;;;;;;;0DAC5E,6LAAC;gDAAI,WAAU;;kEAAyB,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAAmC,6LAAC,mIAAA,CAAA,kBAAe;kEAAC;;;;;;;;;;;;;;;;;;;;;;;0CAG/G,6LAAC;gCAAI,WAAU;;kDACX,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAc,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACnE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAAoC,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,oIAAA,CAAA,QAAK;4DAAC,MAAK;4DAAU,GAAG,KAAK;4DAAE,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;kEAAoB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;kDAEhK,6LAAC,mIAAA,CAAA,YAAS;wCAAC,SAAS,KAAK,OAAO;wCAAE,MAAK;wCAAiB,QAAQ,CAAC,EAAE,KAAK,EAAE,iBACtE,6LAAC,mIAAA,CAAA,WAAQ;;kEAAC,6LAAC,mIAAA,CAAA,YAAS;kEAAC;;;;;;kEAA0B,6LAAC,mIAAA,CAAA,cAAW;kEAAC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;4DAAE,GAAG,KAAK;4DAAE,OAAO,MAAM,KAAK,IAAI;;;;;;;;;;;kEAAoB,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;0CAI/I,6LAAC,qIAAA,CAAA,eAAY;gCAAC,WAAU;;kDACpB,6LAAC,qIAAA,CAAA,SAAM;wCAAC,MAAK;wCAAS,SAAQ;wCAAQ,SAAS,IAAM,UAAU;kDAAQ;;;;;;kDACvE,6LAAC,qIAAA,CAAA,SAAM;wCAAC,MAAK;wCAAS,UAAU;kDAC3B,6BAAe;;8DAAE,6LAAC,oNAAA,CAAA,UAAO;oDAAC,WAAU;;;;;;gDAA8B;;2DAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtG;GArKgB;;QAEI,+HAAA,CAAA,WAAQ;QAEb,iKAAA,CAAA,UAAO;;;KAJN","debugId":null}},
    {"offset": {"line": 8288, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/project-tracker.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { getProjectTrackerRecords } from '@/app/actions';\nimport type { ProjectTrackerRecord } from '@/ai/schemas';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { AlertTriangle, PlusCircle, Edit, KanbanSquare, CheckCircle2, Circle, MoreHorizontal } from 'lucide-react';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport { ProjectTrackerForm } from './project-tracker-form';\nimport { cn } from '@/lib/utils';\n\nconst ProgressStep = ({ label, isCompleted, isCurrent }: { label: string; isCompleted: boolean; isCurrent: boolean }) => (\n    <div className=\"flex items-center gap-2\">\n        <div className={cn(\n            \"h-6 w-6 rounded-full flex items-center justify-center border-2\",\n            isCompleted ? \"bg-green-500 border-green-500 text-white\" : \"bg-secondary border-border\",\n            isCurrent && !isCompleted && \"border-primary\"\n        )}>\n            {isCompleted ? <CheckCircle2 className=\"h-4 w-4\" /> : <Circle className={cn(\"h-3 w-3\", isCurrent ? \"text-primary\" : \"text-muted-foreground/50\")} />}\n        </div>\n        <span className={cn(\"text-sm\", isCurrent && !isCompleted ? \"font-semibold text-primary\" : \"text-muted-foreground\", isCompleted && \"font-medium text-foreground\")}>\n            {label}\n        </span>\n    </div>\n);\n\nconst ProjectCard = ({ record, onEdit }: { record: ProjectTrackerRecord, onEdit: (record: ProjectTrackerRecord) => void }) => {\n    const stages = [\n        { label: 'Topic Selected', completed: record.topic_selected },\n        { label: 'Review 1 Done', completed: record.review1_score !== null },\n        { label: 'Review 2 Done', completed: record.review2_score !== null },\n        { label: 'Final Submission', completed: record.final_submission },\n    ];\n    const completedCount = stages.filter(s => s.completed).length;\n    const progress = (completedCount / stages.length) * 100;\n    const currentStageIndex = stages.findIndex(s => !s.completed);\n\n    const renderScore = (score: number | null, feedback: string | null) => {\n        if (score === null) return <span className=\"text-muted-foreground\">Pending</span>;\n        return (\n            <div className='flex flex-col'>\n                <Badge variant=\"secondary\" className=\"w-fit\">{score} / 100</Badge>\n                {feedback && <p className=\"text-xs text-muted-foreground mt-1\">\"{feedback}\"</p>}\n            </div>\n        );\n    };\n\n    return (\n        <Card>\n            <CardHeader>\n                <div className=\"flex justify-between items-start\">\n                    <div>\n                        <CardTitle className=\"text-lg\">{record.project_title}</CardTitle>\n                        <CardDescription>{record.student_name} ({record.roll_no}) | Mentor: {record.mentor_name}</CardDescription>\n                    </div>\n                    <Button variant=\"ghost\" size=\"sm\" onClick={() => onEdit(record)}><Edit className=\"h-4 w-4 mr-2\" />Edit</Button>\n                </div>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n                <div>\n                    <h4 className=\"text-sm font-semibold mb-3\">Progress</h4>\n                    <div className=\"flex items-center space-x-2\">\n                        {stages.map((stage, index) => (\n                            <React.Fragment key={stage.label}>\n                                <ProgressStep label={stage.label} isCompleted={stage.completed} isCurrent={index === currentStageIndex} />\n                                {index < stages.length - 1 && <MoreHorizontal className=\"text-muted-foreground/50\" />}\n                            </React.Fragment>\n                        ))}\n                    </div>\n                </div>\n                <Separator />\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                    <div className=\"space-y-1\">\n                        <p className=\"font-medium\">Review 1</p>\n                        {renderScore(record.review1_score, record.review1_feedback)}\n                    </div>\n                    <div className=\"space-y-1\">\n                        <p className=\"font-medium\">Review 2</p>\n                        {renderScore(record.review2_score, record.review2_feedback)}\n                    </div>\n                    <div className=\"space-y-1\">\n                        <p className=\"font-medium\">Final Score</p>\n                        {renderScore(record.final_score, record.final_feedback)}\n                    </div>\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport function ProjectTracker() {\n    const [records, setRecords] = useState<ProjectTrackerRecord[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [isFormOpen, setIsFormOpen] = useState(false);\n    const [editingRecord, setEditingRecord] = useState<ProjectTrackerRecord | null>(null);\n\n    const loadData = useCallback(async () => {\n        setIsLoading(true);\n        const result = await getProjectTrackerRecords();\n        if (result.error) {\n            setError(result.error);\n        } else {\n            setRecords(result.records || []);\n        }\n        setIsLoading(false);\n    }, []);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    const handleNew = () => {\n        setEditingRecord(null);\n        setIsFormOpen(true);\n    };\n\n    const handleEdit = (record: ProjectTrackerRecord) => {\n        setEditingRecord(record);\n        setIsFormOpen(true);\n    };\n    \n    const handleSuccess = () => {\n        setIsFormOpen(false);\n        loadData();\n    };\n\n    return (\n        <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n        <Card className=\"w-full shadow-lg\">\n            <CardHeader>\n                <div className=\"flex justify-between items-center\">\n                    <div>\n                        <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                            <KanbanSquare className=\"h-6 w-6\" /> Final Year Project Tracker\n                        </CardTitle>\n                        <CardDescription>\n                            Monitor and update the progress of student projects.\n                        </CardDescription>\n                    </div>\n                    <Button onClick={handleNew}><PlusCircle className=\"mr-2 h-4 w-4\" /> Track New Project</Button>\n                </div>\n            </CardHeader>\n            <CardContent>\n                {isLoading && (\n                    <div className=\"space-y-4\">\n                        {[...Array(2)].map((_, i) => <Skeleton key={i} className=\"h-48 w-full\" />)}\n                    </div>\n                )}\n\n                {error && (\n                    <Alert variant=\"destructive\">\n                        <AlertTriangle className=\"h-4 w-4\" />\n                        <AlertTitle>Error Loading Projects</AlertTitle>\n                        <AlertDescription>{error}</AlertDescription>\n                    </Alert>\n                )}\n\n                {!isLoading && !error && (\n                    records.length > 0 ? (\n                        <div className=\"space-y-4\">\n                            {records.map(record => (\n                                <ProjectCard key={record.id} record={record} onEdit={handleEdit} />\n                            ))}\n                        </div>\n                    ) : (\n                        <div className=\"text-center py-10 border-2 border-dashed rounded-lg\">\n                            <h3 className=\"text-lg font-semibold text-muted-foreground\">No Projects Tracked</h3>\n                            <p className=\"text-sm text-muted-foreground mt-1\">Click \"Track New Project\" to get started.</p>\n                        </div>\n                    )\n                )}\n\n                <ProjectTrackerForm \n                    isOpen={isFormOpen} \n                    setIsOpen={setIsFormOpen} \n                    onSuccess={handleSuccess}\n                    record={editingRecord}\n                />\n            </CardContent>\n        </Card>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8864, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/document-vault.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { getStudentDocumentsAction, updateDocumentStatusAction } from '@/app/actions';\nimport type { StudentDocumentRecord } from '@/ai/schemas';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { AlertTriangle, Archive, Check, X, Download, Filter, Loader2, Copy } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { format } from 'date-fns';\nimport { useToast } from '@/hooks/use-toast';\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Label } from \"@/components/ui/label\";\n\nexport function DocumentVault() {\n    const [records, setRecords] = useState<StudentDocumentRecord[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [filter, setFilter] = useState('all'); // 'all', 'pending', 'verified'\n    const [isUpdating, setIsUpdating] = useState<string | null>(null);\n    const { toast } = useToast();\n\n    const loadData = useCallback(async () => {\n        setIsLoading(true);\n        setError(null);\n        const result = await getStudentDocumentsAction();\n        if (result.error) {\n            setError(result.error);\n        } else {\n            setRecords(result.records || []);\n        }\n        setIsLoading(false);\n    }, []);\n\n    useEffect(() => {\n        loadData();\n    }, [loadData]);\n\n    const handleUpdateStatus = async (id: string, verified: boolean) => {\n        setIsUpdating(id);\n        const result = await updateDocumentStatusAction(id, verified);\n        if (result.error || !result.record) {\n            toast({\n                title: \"Update Failed\",\n                description: result.error || \"Could not update document status.\",\n                variant: \"destructive\"\n            });\n        } else {\n            toast({\n                title: \"Success\",\n                description: \"Document status has been updated.\",\n            });\n            // Update local state directly to guarantee UI refresh\n            setRecords(currentRecords => \n                currentRecords.map(rec => \n                    rec.id === id ? { ...rec, verified: result.record!.verified } : rec\n                )\n            );\n        }\n        setIsUpdating(null);\n    };\n\n    const copyUploadLink = () => {\n        const uploadUrl = `${window.location.origin}/upload`;\n        navigator.clipboard.writeText(uploadUrl);\n        toast({\n            title: \"Link Copied!\",\n            description: \"The student upload link has been copied to your clipboard.\",\n        });\n    }\n\n    const filteredRecords = useMemo(() => {\n        if (filter === 'pending') return records.filter(r => !r.verified);\n        if (filter === 'verified') return records.filter(r => r.verified);\n        return records;\n    }, [records, filter]);\n    \n    return (\n        <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n        <Card className=\"w-full shadow-lg\">\n            <CardHeader>\n                 <div className=\"flex justify-between items-start\">\n                    <div>\n                        <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                            <Archive className=\"h-6 w-6\" /> Student Document Vault\n                        </CardTitle>\n                        <CardDescription>\n                            Review, verify, and manage documents uploaded by students.\n                        </CardDescription>\n                    </div>\n                    <Button variant=\"outline\" onClick={copyUploadLink}>\n                        <Copy className=\"h-4 w-4 mr-2\"/>\n                        Copy Upload Link\n                    </Button>\n                </div>\n            </CardHeader>\n            <CardContent>\n                <div className=\"flex items-center gap-4 mb-4\">\n                    <h3 className=\"text-sm font-medium flex items-center gap-2\"><Filter className=\"h-4 w-4\" />Filter by Status:</h3>\n                    <RadioGroup defaultValue=\"all\" onValueChange={setFilter} className=\"flex items-center gap-4\">\n                        <div className=\"flex items-center space-x-2\">\n                            <RadioGroupItem value=\"all\" id=\"r-all\" />\n                            <Label htmlFor=\"r-all\">All ({records.length})</Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                            <RadioGroupItem value=\"pending\" id=\"r-pending\" />\n                            <Label htmlFor=\"r-pending\">Pending ({records.filter(r => !r.verified).length})</Label>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                            <RadioGroupItem value=\"verified\" id=\"r-verified\" />\n                            <Label htmlFor=\"r-verified\">Verified ({records.filter(r => r.verified).length})</Label>\n                        </div>\n                    </RadioGroup>\n                </div>\n\n                {isLoading ? (\n                    <div className=\"space-y-2\">\n                        {[...Array(3)].map((_, i) => <Skeleton key={i} className=\"h-12 w-full\" />)}\n                    </div>\n                ) : error ? (\n                    <Alert variant=\"destructive\">\n                        <AlertTriangle className=\"h-4 w-4\" />\n                        <AlertTitle>Error Loading Documents</AlertTitle>\n                        <AlertDescription>{error}</AlertDescription>\n                    </Alert>\n                ) : (\n                    filteredRecords.length > 0 ? (\n                        <Table>\n                            <TableHeader>\n                                <TableRow>\n                                    <TableHead>Student Name</TableHead>\n                                    <TableHead>Roll Number</TableHead>\n                                    <TableHead>Document Type</TableHead>\n                                    <TableHead>Uploaded At</TableHead>\n                                    <TableHead>Status</TableHead>\n                                    <TableHead className=\"text-right\">Actions</TableHead>\n                                </TableRow>\n                            </TableHeader>\n                            <TableBody>\n                                {filteredRecords.map(record => (\n                                    <TableRow key={record.id}>\n                                        <TableCell className=\"font-medium\">{record.student_name}</TableCell>\n                                        <TableCell>{record.roll_no}</TableCell>\n                                        <TableCell>{record.doc_type}</TableCell>\n                                        <TableCell>{format(new Date(record.uploaded_at), 'PPP p')}</TableCell>\n                                        <TableCell>\n                                            <Badge variant={record.verified ? 'default' : 'secondary'}>\n                                                {record.verified ? 'Verified' : 'Pending'}\n                                            </Badge>\n                                        </TableCell>\n                                        <TableCell className=\"text-right space-x-2\">\n                                            <Button variant=\"ghost\" size=\"icon\" asChild>\n                                                <a href={record.file_url} target=\"_blank\" rel=\"noopener noreferrer\" title=\"Download document\">\n                                                    <Download className=\"h-4 w-4\" />\n                                                </a>\n                                            </Button>\n                                            <Button \n                                                variant=\"outline\" size=\"icon\"\n                                                title=\"Mark as verified\"\n                                                disabled={isUpdating === record.id || record.verified}\n                                                onClick={() => handleUpdateStatus(record.id, true)}\n                                            >\n                                                {isUpdating === record.id && !record.verified ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <Check className=\"h-4 w-4 text-green-600\" />}\n                                            </Button>\n                                            <Button \n                                                variant=\"outline\" size=\"icon\"\n                                                title=\"Mark as pending\"\n                                                disabled={isUpdating === record.id || !record.verified}\n                                                onClick={() => handleUpdateStatus(record.id, false)}\n                                            >\n                                                {isUpdating === record.id && record.verified ? <Loader2 className=\"h-4 w-4 animate-spin\" /> : <X className=\"h-4 w-4 text-red-600\" />}\n                                            </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    ) : (\n                        <div className=\"text-center py-10 border-2 border-dashed rounded-lg\">\n                            <h3 className=\"text-lg font-semibold text-muted-foreground\">No Documents Found</h3>\n                            <p className=\"text-sm text-muted-foreground mt-1\">No documents match the current filter or none have been uploaded yet.</p>\n                        </div>\n                    )\n                )}\n            </CardContent>\n        </Card>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9485, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/classroom-gamifier.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useForm, useFieldArray } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { generateClassroomGameAction, getLeaderboardAction, createCustomQuizAction } from '@/app/actions';\nimport { CreateCustomQuizInputSchema, type GenerateClassroomGameOutput, type GameLeaderboardRecord, type CustomQuizQuestion } from '@/ai/schemas';\nimport { Card, CardHeader, CardTitle, CardContent, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Loader2, Gamepad2, BrainCircuit, Trophy, Send, PlusCircle, Trash2, Copy, Share2, Link as LinkIcon, Edit } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs';\nimport { Separator } from './ui/separator';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\n\nconst aiFormSchema = z.object({\n  topic: z.string().min(3, { message: \"Topic must be at least 3 characters.\" }),\n});\n\nconst CustomQuizCreator = ({ setQuizLink, setLiveTopic }: { setQuizLink: (link: string) => void; setLiveTopic: (topic: string) => void; }) => {\n    const { toast } = useToast();\n    const [isLoading, setIsLoading] = useState(false);\n\n    const form = useForm<z.infer<typeof CreateCustomQuizInputSchema>>({\n        resolver: zodResolver(CreateCustomQuizInputSchema),\n        defaultValues: {\n            topic: \"\",\n            questions: [{ question: \"\", options: { A: \"\", B: \"\", C: \"\", D: \"\" }, answer: \"A\" }]\n        }\n    });\n\n    const { fields, append, remove } = useFieldArray({\n        control: form.control,\n        name: \"questions\"\n    });\n\n    const onSubmit = async (values: z.infer<typeof CreateCustomQuizInputSchema>) => {\n        setIsLoading(true);\n        try {\n            const result = await createCustomQuizAction(values);\n            if (result.error) throw new Error(result.error);\n\n            const quizId = result.quizId;\n            const link = `${window.location.origin}/quiz/${quizId}`;\n            setQuizLink(link);\n            setLiveTopic(values.topic);\n            toast({ title: \"Quiz Created!\", description: \"Share the link with your students.\" });\n        } catch (e) {\n            const errorMessage = e instanceof Error ? e.message : \"An unknown error occurred.\";\n            toast({ variant: \"destructive\", title: \"Failed to create quiz\", description: errorMessage });\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n    return (\n        <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                <FormField control={form.control} name=\"topic\" render={({ field }) => (\n                    <FormItem>\n                        <FormLabel>Quiz Topic</FormLabel>\n                        <FormControl><Input placeholder=\"e.g., Final Review on Thermodynamics\" {...field} /></FormControl>\n                        <FormMessage />\n                    </FormItem>\n                )} />\n\n                <Separator />\n\n                {fields.map((field, index) => (\n                    <Card key={field.id} className=\"p-4 bg-secondary/50\">\n                        <div className=\"flex justify-between items-center mb-4\">\n                            <h4 className=\"font-semibold\">Question {index + 1}</h4>\n                            <Button type=\"button\" variant=\"ghost\" size=\"icon\" onClick={() => remove(index)} disabled={fields.length <= 1}>\n                                <Trash2 className=\"h-4 w-4 text-destructive\" />\n                            </Button>\n                        </div>\n                        <div className=\"space-y-4\">\n                             <FormField control={form.control} name={`questions.${index}.question`} render={({ field }) => (\n                                <FormItem><FormLabel>Question Text</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>\n                             )} />\n                             <div className=\"grid grid-cols-2 gap-4\">\n                                 <FormField control={form.control} name={`questions.${index}.options.A`} render={({ field }) => (\n                                    <FormItem><FormLabel>Option A</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>\n                                 )} />\n                                 <FormField control={form.control} name={`questions.${index}.options.B`} render={({ field }) => (\n                                    <FormItem><FormLabel>Option B</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>\n                                 )} />\n                                 <FormField control={form.control} name={`questions.${index}.options.C`} render={({ field }) => (\n                                    <FormItem><FormLabel>Option C</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>\n                                 )} />\n                                 <FormField control={form.control} name={`questions.${index}.options.D`} render={({ field }) => (\n                                    <FormItem><FormLabel>Option D</FormLabel><FormControl><Input {...field} /></FormControl><FormMessage /></FormItem>\n                                 )} />\n                             </div>\n                             <FormField control={form.control} name={`questions.${index}.answer`} render={({ field }) => (\n                                <FormItem>\n                                    <FormLabel>Correct Answer</FormLabel>\n                                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                                        <FormControl><SelectTrigger><SelectValue /></SelectTrigger></FormControl>\n                                        <SelectContent>\n                                            <SelectItem value=\"A\">Option A</SelectItem>\n                                            <SelectItem value=\"B\">Option B</SelectItem>\n                                            <SelectItem value=\"C\">Option C</SelectItem>\n                                            <SelectItem value=\"D\">Option D</SelectItem>\n                                        </SelectContent>\n                                    </Select>\n                                    <FormMessage />\n                                </FormItem>\n                             )} />\n                        </div>\n                    </Card>\n                ))}\n\n                <Button type=\"button\" variant=\"outline\" onClick={() => append({ question: \"\", options: { A: \"\", B: \"\", C: \"\", D: \"\" }, answer: \"A\" })}>\n                    <PlusCircle className=\"mr-2 h-4 w-4\" /> Add Question\n                </Button>\n                \n                <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                    {isLoading ? <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Creating Quiz...</> : 'Create & Get Link'}\n                </Button>\n            </form>\n        </Form>\n    )\n};\n\n\nconst Leaderboard = ({ topic }: { topic: string }) => {\n    const [records, setRecords] = useState<GameLeaderboardRecord[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const fetchLeaderboard = useCallback(async () => {\n        setIsLoading(true);\n        const result = await getLeaderboardAction(topic);\n        if (result.records) {\n            setRecords(result.records);\n        }\n        setIsLoading(false);\n    }, [topic]);\n\n    useEffect(() => {\n        if (!topic) return;\n        fetchLeaderboard();\n        const interval = setInterval(fetchLeaderboard, 5000); // Refresh every 5 seconds\n        return () => clearInterval(interval);\n    }, [topic, fetchLeaderboard]);\n    \n    if (!topic) return null;\n\n    return (\n        <Card className=\"mt-6\">\n            <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\"><Trophy className=\"text-yellow-500\" /> Live Leaderboard</CardTitle>\n                <CardDescription>Scores for \"{topic}\"</CardDescription>\n            </CardHeader>\n            <CardContent>\n                {isLoading && <Skeleton className=\"h-40 w-full\" />}\n                {!isLoading && records.length === 0 && <p className=\"text-sm text-center text-muted-foreground py-8\">No scores yet. Waiting for players...</p>}\n                {!isLoading && records.length > 0 && (\n                     <ol className=\"space-y-3\">\n                        {records.map((r, i) => (\n                            <li key={r.id} className=\"flex items-center justify-between text-sm p-2 rounded-md bg-secondary/50\">\n                                <span className=\"font-medium truncate\">\n                                    {i === 0 && '🥇'}\n                                    {i === 1 && '🥈'}\n                                    {i === 2 && '🥉'}\n                                    {i > 2 && `${i + 1}.`}\n                                    &nbsp;{r.player_name}\n                                </span>\n                                <span className=\"font-bold text-primary\">{r.score} pts</span>\n                            </li>\n                        ))}\n                    </ol>\n                )}\n            </CardContent>\n        </Card>\n    )\n};\n\nexport function ClassroomGamifier() {\n  const [quizLink, setQuizLink] = useState<string>('');\n  const [liveTopic, setLiveTopic] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n  const form = useForm<z.infer<typeof aiFormSchema>>({ \n    resolver: zodResolver(aiFormSchema),\n    defaultValues: {\n      topic: \"\",\n    },\n  });\n\n  const onSubmit = async (values: z.infer<typeof aiFormSchema>) => {\n    setIsLoading(true);\n    setQuizLink('');\n    setLiveTopic('');\n    try {\n      const result = await generateClassroomGameAction(values.topic);\n      if (result.error) throw new Error(result.error);\n      \n      if (result.game) {\n        const customQuizInput: z.infer<typeof CreateCustomQuizInputSchema> = {\n            topic: values.topic,\n            questions: result.game.quiz.map(q => ({\n                question: q.question,\n                options: q.options,\n                answer: q.answer\n            }))\n        };\n        const createResult = await createCustomQuizAction(customQuizInput);\n        if (createResult.error) throw new Error(createResult.error);\n        \n        const link = `${window.location.origin}/quiz/${createResult.quizId}`;\n        setQuizLink(link);\n        setLiveTopic(values.topic);\n        toast({ title: \"AI Quiz Generated!\", description: \"A shareable quiz link has been created.\"})\n      } else {\n        throw new Error(\"AI failed to generate a game.\");\n      }\n    } catch (e) {\n      const errorMessage = e instanceof Error ? e.message : \"An unknown error occurred.\";\n      toast({ variant: \"destructive\", title: \"Failed to create game\", description: errorMessage });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(quizLink);\n    toast({ title: \"Link Copied!\", description: \"The quiz link is ready to be shared.\"})\n  }\n\n  const handleNewQuiz = () => {\n    setQuizLink('');\n    setLiveTopic('');\n  }\n\n  return (\n    <div\n          className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n          style={\n            {\n              \"--border-angle\": \"0deg\",\n              backgroundImage:\n                \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n            } as React.CSSProperties\n          }\n        >\n    <Card className=\"w-full shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n          <Gamepad2 className=\"h-6 w-6\" /> Classroom Gamifier\n        </CardTitle>\n        <CardDescription>\n          Create a live, shareable quiz for your students using AI or by setting your own questions.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {quizLink ? (\n            <div className=\"text-center space-y-4 p-8 border-2 border-dashed rounded-lg\">\n                 <div className=\"flex justify-center items-center mb-4\">\n                    <div className=\"p-3 rounded-full bg-green-500/10\">\n                        <Share2 className=\"h-8 w-8 text-green-500\" />\n                    </div>\n                </div>\n                <h3 className=\"text-2xl font-bold\">Quiz is Live!</h3>\n                <p className=\"text-muted-foreground\">Share this link with your students to have them join the quiz.</p>\n                <div className=\"flex w-full max-w-md mx-auto items-center space-x-2\">\n                    <Input value={quizLink} readOnly />\n                    <Button onClick={copyToClipboard} size=\"icon\">\n                        <Copy className=\"h-4 w-4\" />\n                    </Button>\n                </div>\n                 <Button variant=\"outline\" onClick={handleNewQuiz}>\n                    <PlusCircle className=\"mr-2 h-4 w-4\"/>Create Another Quiz\n                </Button>\n            </div>\n        ) : (\n             <Tabs defaultValue=\"create\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-2\">\n                    <TabsTrigger value=\"create\"><Edit className=\"mr-2 h-4 w-4\"/>Create Your Own</TabsTrigger>\n                    <TabsTrigger value=\"ai\"><BrainCircuit className=\"mr-2 h-4 w-4\"/>Use AI Generator</TabsTrigger>\n                </TabsList>\n                <TabsContent value=\"create\" className=\"mt-6\">\n                     <CustomQuizCreator setQuizLink={setQuizLink} setLiveTopic={setLiveTopic} />\n                </TabsContent>\n                <TabsContent value=\"ai\" className=\"mt-6\">\n                    <Form {...form}>\n                        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 max-w-lg mx-auto\">\n                        <FormField\n                            control={form.control}\n                            name=\"topic\"\n                            render={({ field }) => (\n                            <FormItem>\n                                <FormLabel>Enter Topic</FormLabel>\n                                <FormControl>\n                                <Input placeholder=\"e.g. The Laws of Thermodynamics\" {...field} />\n                                </FormControl>\n                                <FormMessage />\n                            </FormItem>\n                            )}\n                        />\n                        <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                            {isLoading ? <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Generating Game...</> : <><BrainCircuit className=\"mr-2 h-4 w-4\" />Generate Classroom Game</>}\n                        </Button>\n                        </form>\n                    </Form>\n                </TabsContent>\n             </Tabs>\n        )}\n        <Leaderboard topic={liveTopic} />\n      </CardContent>\n    </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10633, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/plagiarism-checker.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, ScanSearch, FileUp, Sparkles } from \"lucide-react\";\nimport { checkPlagiarismAction } from \"@/app/actions\";\nimport type { PlagiarismCheckOutput } from \"@/ai/schemas\";\nimport { Skeleton } from \"./ui/skeleton\";\nimport { Progress } from \"./ui/progress\";\n\nconst formSchema = z.object({\n  file1: z\n    .any()\n    .refine((files) => files?.length === 1, \"First document is required.\")\n    .refine((files) => files?.[0]?.size <= 5000000, `Max file size is 5MB.`)\n    .refine(\n      (files) => [\"application/pdf\", \"text/plain\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"].includes(files?.[0]?.type),\n      \".pdf, .txt, and .docx files are accepted.\"\n    ),\n  file2: z\n    .any()\n    .refine((files) => files?.length === 1, \"Second document is required.\")\n    .refine((files) => files?.[0]?.size <= 5000000, `Max file size is 5MB.`)\n    .refine(\n      (files) => [\"application/pdf\", \"text/plain\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"].includes(files?.[0]?.type),\n      \".pdf, .txt, and .docx files are accepted.\"\n    ),\n});\n\nexport function PlagiarismChecker() {\n  const [checkResult, setCheckResult] = useState<PlagiarismCheckOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      file1: undefined,\n      file2: undefined,\n    },\n  });\n  const file1Ref = form.register(\"file1\");\n  const file2Ref = form.register(\"file2\");\n  \n  const readFileAsDataURL = (file: File): Promise<string> => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result as string);\n        reader.onerror = (error) => reject(error);\n        reader.readAsDataURL(file);\n    });\n  };\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsLoading(true);\n    setCheckResult(null);\n\n    try {\n        const file1 = values.file1[0] as File;\n        const file2 = values.file2[0] as File;\n\n        const [doc1Content, doc2Content] = await Promise.all([\n            readFileAsDataURL(file1),\n            readFileAsDataURL(file2),\n        ]);\n        \n        const result = await checkPlagiarismAction({\n            doc1Name: file1.name,\n            doc1Content,\n            doc1MimeType: file1.type,\n            doc2Name: file2.name,\n            doc2Content,\n            doc2MimeType: file2.type,\n        });\n\n        if (result.error) {\n            throw new Error(result.error);\n        }\n        setCheckResult(result.result || null);\n        if (result.result) {\n            toast({\n            title: \"Analysis Complete\",\n            description: \"The documents have been compared successfully.\",\n            });\n        }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\n      toast({\n        variant: \"destructive\",\n        title: \"Error Checking Documents\",\n        description: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div\n      className=\"relative rounded-xl border border-transparent bg-transparent p-[1.5px] shadow-lg animate-glowing-border\"\n      style={\n        {\n          \"--border-angle\": \"0deg\",\n          backgroundImage:\n            \"linear-gradient(var(--border-angle), hsl(var(--primary) / 0.5), hsl(var(--primary) / 0.1) 50%, hsl(var(--primary) / 0.5))\",\n        } as React.CSSProperties\n      }\n    >\n      <Card className=\"w-full shadow-lg\">\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)}>\n            <CardHeader>\n              <CardTitle className=\"text-2xl font-headline flex items-center gap-2\">\n                <ScanSearch className=\"h-6 w-6\" /> AI Plagiarism Checker\n              </CardTitle>\n              <CardDescription>\n                Upload two documents (PDF, TXT, DOCX) to compare them for potential plagiarism.\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <FormField\n                  control={form.control}\n                  name=\"file1\"\n                  render={() => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center gap-2\"><FileUp className=\"h-4 w-4\" />Document 1</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"file\"\n                          accept=\".pdf,.txt,.docx,application/pdf,text/plain,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                          {...file1Ref}\n                          className=\"file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"file2\"\n                  render={() => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center gap-2\"><FileUp className=\"h-4 w-4\" />Document 2</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"file\"\n                          accept=\".pdf,.txt,.docx,application/pdf,text/plain,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                          {...file2Ref}\n                          className=\"file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n              {isLoading && (\n                <div className=\"space-y-4 pt-4\">\n                  <p className=\"text-sm text-center text-muted-foreground flex items-center justify-center gap-2\">\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    AI is analyzing the documents... this may take a moment.\n                  </p>\n                  <Skeleton className=\"h-24 w-full\" />\n                  <Skeleton className=\"h-32 w-full\" />\n                </div>\n              )}\n              {checkResult && (\n                <div className=\"space-y-6 pt-4\">\n                  <Card className=\"bg-secondary/30\">\n                    <CardHeader>\n                        <CardTitle>Analysis Report</CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-4\">\n                        <div>\n                            <div className=\"flex justify-between items-baseline mb-2\">\n                                <h4 className=\"font-semibold\">Similarity Score</h4>\n                                <span className=\"text-2xl font-bold text-primary\">{checkResult.similarityPercentage.toFixed(2)}%</span>\n                            </div>\n                            <Progress value={checkResult.similarityPercentage} />\n                        </div>\n                        <div>\n                            <h4 className=\"font-semibold\">Verdict</h4>\n                            <p className=\"text-muted-foreground\">{checkResult.verdict}</p>\n                        </div>\n                    </CardContent>\n                  </Card>\n                   <Card>\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\"><Sparkles className=\"h-5 w-5 text-yellow-500\" />Detailed Analysis</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                        <p className=\"text-muted-foreground whitespace-pre-wrap\">{checkResult.analysis}</p>\n                    </CardContent>\n                  </Card>\n                </div>\n              )}\n            </CardContent>\n            <CardFooter>\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                {isLoading ? (\n                  <><Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />Analyzing...</>\n                ) : (\"Check for Plagiarism\")}\n              </Button>\n            </CardFooter>\n          </form>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 11172, "column": 0}, "map": {"version":3,"sources":["file:///C:/Downloads/EduBuddy-main/EduBuddy-main/src/components/main-navigation.tsx"],"sourcesContent":["\n\"use client\";\n\nimport {\n  TestTube,\n  BarChart3,\n  BookMarked,\n  LayoutDashboard,\n  FileText,\n  ClipboardList,\n  Calculator,\n  ListTodo,\n  UserCircle,\n  Calendar,\n  GraduationCap,\n  KanbanSquare,\n  Archive,\n  Gamepad2,\n  Orbit,\n  Sparkles,\n  ScanSearch,\n} from \"lucide-react\";\nimport RadialOrbitalTimeline from \"./ui/radial-orbital-timeline\";\n\n\nexport const navigationData = [\n    {\n      id: 1,\n      value: \"student-profile\",\n      title: \"Student Profile\",\n      content: \"View detailed student profiles.\",\n      icon: UserCircle,\n      relatedIds: [2, 8],\n      status: \"completed\" as const,\n      energy: 100,\n    },\n    {\n      id: 2,\n      value: \"academic-calendar\",\n      title: \"Calendar\",\n      content: \"Manage academic events and schedules.\",\n      icon: Calendar,\n      relatedIds: [1, 3],\n      status: \"completed\" as const,\n      energy: 95,\n    },\n    {\n      id: 3,\n      value: \"gamifier\",\n      title: \"Gamifier\",\n      content: \"Create fun classroom games.\",\n      icon: Gamepad2,\n      relatedIds: [2, 4],\n      status: \"completed\" as const,\n      energy: 90,\n    },\n    {\n      id: 4,\n      value: \"document-vault\",\n      title: \"Document Vault\",\n      content: \"Manage student documents.\",\n      icon: Archive,\n      relatedIds: [3, 5],\n      status: \"completed\" as const,\n      energy: 85,\n    },\n    {\n      id: 5,\n      value: \"question-generator\",\n      title: \"MCQ Generator\",\n      content: \"Generate multiple-choice questions.\",\n      icon: TestTube,\n      relatedIds: [4, 6],\n      status: \"completed\" as const,\n      energy: 80,\n    },\n    {\n      id: 6,\n      value: \"question-paper-generator\",\n      title: \"Question Paper\",\n      content: \"Create full question papers.\",\n      icon: FileText,\n      relatedIds: [5, 7],\n      status: \"completed\" as const,\n      energy: 75,\n    },\n    {\n      id: 7,\n      value: \"assignment-grader\",\n      title: \"Assignment Grader\",\n      content: \"Grade assignments with AI assistance.\",\n      icon: GraduationCap,\n      relatedIds: [6, 8],\n      status: \"in-progress\" as const,\n      energy: 70,\n    },\n    {\n      id: 8,\n      value: \"project-tracker\",\n      title: \"Project Tracker\",\n      content: \"Track final year student projects.\",\n      icon: KanbanSquare,\n      relatedIds: [7, 9, 1],\n      status: \"in-progress\" as const,\n      energy: 65,\n    },\n    {\n      id: 9,\n      value: \"grade-analyzer\",\n      title: \"Grade Analyzer\",\n      content: \"Analyze student grades from files.\",\n      icon: BarChart3,\n      relatedIds: [8, 10],\n      status: \"in-progress\" as const,\n      energy: 60,\n    },\n    {\n      id: 10,\n      value: \"teaching-plan-advisor\",\n      title: \"Teaching Advisor\",\n      content: \"Get advice on teaching plans.\",\n      icon: BookMarked,\n      relatedIds: [9, 11],\n      status: \"pending\" as const,\n      energy: 55,\n    },\n    {\n      id: 11,\n      value: \"report-dashboard\",\n      title: \"Report Dashboard\",\n      content: \"View performance reports.\",\n      icon: LayoutDashboard,\n      relatedIds: [10, 12],\n      status: \"pending\" as const,\n      energy: 50,\n    },\n     {\n      id: 12,\n      value: \"attendance-tracker\",\n      title: \"Attendance\",\n      content: \"Track student attendance.\",\n      icon: ClipboardList,\n      relatedIds: [11, 13],\n      status: \"pending\" as const,\n      energy: 45,\n    },\n    {\n      id: 13,\n      value: \"mark-calculator\",\n      title: \"Mark Calculator\",\n      content: \"Calculate internal marks.\",\n      icon: Calculator,\n      relatedIds: [12, 14],\n      status: \"pending\" as const,\n      energy: 40,\n    },\n    {\n      id: 14,\n      value: \"knowledge-galaxy\",\n      title: \"Knowledge Galaxy\",\n      content: \"Visualize course syllabus.\",\n      icon: Sparkles,\n      relatedIds: [13, 15],\n      status: \"pending\" as const,\n      energy: 35,\n    },\n    {\n      id: 15,\n      value: \"plagiarism-checker\",\n      title: \"Plagiarism Checker\",\n      content: \"Compare documents for similarity.\",\n      icon: ScanSearch,\n      relatedIds: [14],\n      status: \"pending\" as const,\n      energy: 30,\n    },\n];\n\n\ninterface MainNavigationProps {\n    setActiveTab: (tab: string) => void;\n}\n\nexport function MainNavigation({ setActiveTab }: MainNavigationProps) {\n    const timelineData = navigationData.map(item => ({\n        ...item,\n        date: \"Feature\",\n        category: \"Module\"\n    }));\n\n    return (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 w-full h-screen\">\n            <div className=\"w-full h-full\">\n                <RadialOrbitalTimeline timelineData={timelineData} onNodeClick={(id) => {\n                    const navItem = navigationData.find(item => item.id === id);\n                    if (navItem) {\n                        setActiveTab(navItem.value);\n                    }\n                }} />\n            </div>\n             <div className=\"hidden lg:flex flex-col items-center justify-center text-center p-8\">\n                <div className=\"relative mb-8\">\n                    <Orbit className=\"h-32 w-32 text-primary/30 animate-spin\" style={{ animationDuration: '20s' }} />\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <div className=\"h-20 w-20 rounded-full bg-primary/20 animate-pulse\"></div>\n                    </div>\n                </div>\n                <h1 className=\"text-5xl font-bold tracking-tight bg-gradient-to-br from-slate-300 to-slate-500 bg-clip-text text-transparent\">\n                    EduBuddy AI\n                </h1>\n                <p className=\"mt-4 text-lg max-w-md text-slate-400\">\n                    Your AI-powered toolkit for teaching excellence. Select a feature from the orbital menu to get started.\n                </p>\n            </div>\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}